(function(e){function t(t){for(var i,o,s=t[0],l=t[1],u=t[2],d=0,h=[];d<s.length;d++)o=s[d],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&h.push(a[o][0]),a[o]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(e[i]=l[i]);c&&c(t);while(h.length)h.shift()();return r.push.apply(r,u||[]),n()}function n(){for(var e,t=0;t<r.length;t++){for(var n=r[t],i=!0,s=1;s<n.length;s++){var l=n[s];0!==a[l]&&(i=!1)}i&&(r.splice(t--,1),e=o(o.s=n[0]))}return e}var i={},a={app:0},r=[];function o(t){if(i[t])return i[t].exports;var n=i[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=i,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)o.d(n,i,function(t){return e[t]}.bind(null,i));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/plasmafractal-gl/";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var u=0;u<s.length;u++)t(s[u]);var c=l;r.push([0,"chunk-vendors"]),n()})({0:function(e,t,n){e.exports=n("56d7")},"0388":function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-form-group",[n("b-form-checkbox",{staticClass:"z42opt-check",attrs:{id:e.id,checked:e.value,disabled:e.disabled},on:{change:function(t){return e.$emit("input",t)}}},[e._v(" "+e._s(e.optDesc.$attrs.title)+" ")])],1)},a=[],r=n("ca11"),o={name:"z42opt-check",inheritAttrs:!1,props:{id:{type:String,required:!0},value:{required:!0},optDesc:{type:r["b"],required:!0},disabled:{type:Boolean,required:!1,default:!1}},created:function(){}},s=o,l=n("2877"),u=Object(l["a"])(s,i,a,!1,null,null,null);t["default"]=u.exports},"094b":function(e,t,n){"use strict";n.d(t,"f",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"c",(function(){return p})),n.d(t,"a",(function(){return f})),n.d(t,"d",(function(){return m})),n.d(t,"b",(function(){return v}));n("c975"),n("0d03"),n("b65f"),n("a9e3"),n("b680"),n("4fad"),n("d3b7"),n("acd8"),n("e25e"),n("25f0"),n("ddb0");var i=n("e587"),a=n("9f12"),r=n("53fe"),o=n("8b83"),s=n("c65a"),l=n("c03e"),u=n("ca11"),c=n("66cb");n.d(t,"g",(function(){return u["a"]}));var d=function(e){function t(e){return Object(a["a"])(this,t),Object(o["a"])(this,Object(s["a"])(t).call(this,e))}return Object(l["a"])(t,e),Object(r["a"])(t,[{key:"$serialize",value:function(e){return Math.trunc(e).toString()}},{key:"$deserialize",value:function(e){return e=parseInt(e,10),isNaN(e)?(this.$parseError(e),this.$attrs.defaultVal):g(Math.ceil(e),this.$attrs.min,this.$attrs.max)}},{key:"$displayValue",value:function(e){null!=this.$attrs.displayFactor&&(e*=this.$attrs.displayFactor);var t=Math.trunc(e).toString();return null!=this.$attrs.displayUnit&&(t+=" "+this.$attrs.displayUnit),t}},{key:"$defaultComponent",get:function(){return"z42opt-range"}}]),t}(u["b"]),h=function(e){function t(e){return Object(a["a"])(this,t),Object(o["a"])(this,Object(s["a"])(t).call(this,e))}return Object(l["a"])(t,e),Object(r["a"])(t,[{key:"$serialize",value:function(e){return y(e,this.$attrs.maxDecimals)}},{key:"$deserialize",value:function(e){return e=parseFloat(e),isNaN(e)?(this.$parseError(e),this.$attrs.defaultVal):g(e,this.$attrs.min,this.$attrs.max)}},{key:"$displayValue",value:function(e){null!=this.$attrs.displayFactor&&(e*=this.$attrs.displayFactor),null!=this.$attrs.maxDecimals&&(e=Number(e.toFixed(this.$attrs.maxDecimals)));var t=e.toString();return null!=this.$attrs.displayUnit&&(t+=" "+this.$attrs.displayUnit),t}},{key:"$defaultComponent",get:function(){return"z42opt-range"}}]),t}(u["b"]),p=function(e){function t(e){return Object(a["a"])(this,t),Object(o["a"])(this,Object(s["a"])(t).call(this,e))}return Object(l["a"])(t,e),Object(r["a"])(t,[{key:"$serialize",value:function(e){var t=y(e,this.$attrs.maxDecimals);return t.indexOf(".")<0&&0!==e&&(t+="."),t}},{key:"$deserialize",value:function(e){var t=e.indexOf(".")>=0;return e=parseFloat(e),isNaN(e)?(this.$parseError(e),this.$attrs.defaultVal):(t||(e/=1e3),g(e,this.$attrs.min,this.$attrs.max))}},{key:"$defaultComponent",get:function(){return"z42opt-range"}}]),t}(h),f=function(e){function t(e){return Object(a["a"])(this,t),Object(o["a"])(this,Object(s["a"])(t).call(this,e))}return Object(l["a"])(t,e),Object(r["a"])(t,[{key:"$serialize",value:function(e){return e?"1":"0"}},{key:"$deserialize",value:function(e){var t=e.toString().toLowerCase();return"true"===t||"1"===t}},{key:"$defaultComponent",get:function(){return"z42opt-check"}}]),t}(u["b"]),m=function(e){function t(e){return Object(a["a"])(this,t),Object(o["a"])(this,Object(s["a"])(t).call(this,e))}return Object(l["a"])(t,e),Object(r["a"])(t,[{key:"$serialize",value:function(e){e=String(e).toLowerCase();for(var t=0,n=Object.entries(this.$attrs.values);t<n.length;t++){var a=Object(i["a"])(n[t],2),r=a[0],o=a[1];if(o.shortKey.toLowerCase()===e)return o.shortKey;if(r.toLowerCase()===e)return o.shortKey}return null}},{key:"$deserialize",value:function(e){e=String(e).toLowerCase();for(var t=0,n=Object.entries(this.$attrs.values);t<n.length;t++){var a=Object(i["a"])(n[t],2),r=a[0],o=a[1];if(o.shortKey.toLowerCase()===e)return r;if(r.toLowerCase()===e)return r}return this.$parseError(e),this.$attrs.defaultVal}},{key:"$defaultComponent",get:function(){return"z42opt-select"}}]),t}(u["b"]),v=function(e){function t(e){return Object(a["a"])(this,t),Object(o["a"])(this,Object(s["a"])(t).call(this,e))}return Object(l["a"])(t,e),Object(r["a"])(t,[{key:"$serialize",value:function(e){return c(e).toHex()}},{key:"$deserialize",value:function(e){var t=c(e);return t.isValid()?t.toRgb():(this.$parseError(e),this.$attrs.defaultVal)}},{key:"$defaultComponent",get:function(){return"z42opt-color"}}]),t}(u["b"]);function g(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return t&&e<t?t:n&&e>n?n:e}function y(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return null!=t&&(e=Number(e.toFixed(t))),e=e.toString(),"0"==e.charAt(0)&&"."==e.charAt(1)?e.substring(1):"-"==e.charAt(0)&&"0"==e.charAt(1)&&"."==e.charAt(2)?"-"+e.substring(2):e}},"0954":function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-form-group",{attrs:{label:e.label,"label-for":e.labelFor,disabled:e.disabled}},[n("canvas",{staticClass:"z42opt-palette-easefun-canvas",attrs:{id:e.easeFunCanvasId}}),n("canvas",{staticClass:"z42opt-palette-gradient-canvas",attrs:{id:e.gradientCanvasId}}),n("div",{staticClass:"z42opt-palette-slider",attrs:{id:e.id,disabled:e.disabled}}),null!==e.selectedHandleIndex?n("z42opt-container",{key:e.selectedPaletteItemId,staticClass:"container px-0",attrs:{id:e.selectedPaletteItemId,optData:e.selectedPaletteItem,optDesc:e.optDesc.segment,optView:e.selectedPaletteItemView},on:{"opt-modified":function(t){return e.onPaletteAttributeInput(t)}}}):e._e(),null===e.selectedHandleIndex?n("div",{staticClass:"text-info"},[n("p",[e._v(" Click handle to "),n("b",[e._v("edit")]),e._v(" properties."),n("br"),e._v(" Curve displays luminance. Change ease functions to modify curve shape. ")]),n("p",[e._v(" Double-click to "),n("b",[e._v("add")]),e._v(" handle."),n("br"),e._v(" Drag up/down or shift+click to "),n("b",[e._v("remove")]),e._v(" handle. ")])]):e._e()],1)},a=[],r=(n("a4d3"),n("e01a"),n("d28b"),n("c740"),n("a630"),n("d81d"),n("4e82"),n("a434"),n("c19f"),n("ace4"),n("b65f"),n("d3b7"),n("3ca3"),n("fb2c"),n("9a8c"),n("a975"),n("735e"),n("c1ac"),n("d139"),n("3a7b"),n("d5d6"),n("82f8"),n("e91f"),n("60bd"),n("5f96"),n("3280"),n("3fcc"),n("ca91"),n("25a1"),n("cd26"),n("3c5d"),n("2954"),n("649e"),n("219c"),n("170b"),n("b39a"),n("72f7"),n("10d1"),n("ddb0"),n("2216")),o=n("4752"),s=n("be4d"),l=n("e9fa"),u=n.n(l),c=n("6dd8"),d=new WeakMap,h=50,p="z42opt-palette-handle-to-remove",f="z42opt-palette-handle-selected",m={name:"z42opt-palette",inheritAttrs:!1,props:{id:{type:String,required:!0},value:{type:Array,required:!0},optDesc:{type:r["a"],required:!0},disabled:{type:Boolean,required:!1,default:!1}},data:function(){return{selectedHandleIndex:null,selectedPaletteItem:null,selectedPaletteItemView:{options:[""]}}},mounted:function(){var e=v(this.value,this.optDesc),t=new c["a"](this.onCanvasResize);d.set(this,{palette:e,currentMousePos:null,slideStartMousePos:null,slidingHandleElement:null,resizeObserver:t});var n={start:y(e),range:{min:0,max:1},step:.001,behaviour:"unconstrained"};null!=this.optDesc.$attrs.step&&(n.step=this.optDesc.$attrs.step),this.recreateSlider(n),this.updateCanvas(),t.observe(document.getElementById(this.gradientCanvasId)),t.observe(document.getElementById(this.easeFunCanvasId)),_.isEqual(e,this.value)||this.emitPaletteInputEvent()},beforeDestroy:function(){var e=d.get(this);window.removeEventListener("mousemove",this.onSlideMouseMove),window.removeEventListener("touchmove",this.onSlideTouchMove),e.resizeObserver.disconnect()},computed:{easeFunCanvasId:function(){return this.id+"#easeFunCanvas"},gradientCanvasId:function(){return this.id+"#gradientCanvas"},selectedPaletteItemId:function(){return this.id+"#segmentOptions"},label:function(){return this.optDesc.$attrs.title?this.optDesc.$attrs.title+":":void 0},labelFor:function(){return this.optDesc.$attrs.title?this.id:void 0}},methods:{getSliderElement:function(){return document.getElementById(this.id)},getSliderWidth:function(){return getSliderElement().offsetWidth},getEaseFunCanvasHeight:function(){return document.getElementById(this.easeFunCanvasId).offsetHeight},recreateSlider:function(e){var t=this,n=this.getSliderElement();n.noUiSlider&&n.noUiSlider.destroy(),u.a.create(n,e),n.noUiSlider.on("start",(function(){return t.onSlideStart.apply(t,arguments)})),n.noUiSlider.on("slide",(function(){return t.onSlide.apply(t,arguments)})),n.noUiSlider.on("end",(function(){return t.onSlideEnd.apply(t,arguments)}));var i=!0,a=!1,r=void 0;try{for(var o,s=n.getElementsByClassName("noUi-connects")[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var l=o.value;l.addEventListener("dblclick",this.onConnectsDblClick)}}catch(v){a=!0,r=v}finally{try{i||null==s.return||s.return()}finally{if(a)throw r}}var c=!0,d=!1,h=void 0;try{for(var p,f=n.getElementsByClassName("noUi-handle")[Symbol.iterator]();!(c=(p=f.next()).done);c=!0){var m=p.value;m.addEventListener("click",this.onHandleClick),m.addEventListener("focus",this.onHandleFocus)}}catch(v){d=!0,h=v}finally{try{c||null==f.return||f.return()}finally{if(d)throw h}}},onSlide:function(e,t,n,i,a){var r=d.get(this).palette,o=y(r);if(!_.isEqual(o,n)){for(var s in n)r[s].pos=n[s];this.updateCanvas(),this.emitPaletteInputEvent()}},onConnectsDblClick:function(e){var t=0;e.target.clientWidth>0&&(t=e.offsetX/e.target.clientWidth),t=_.clamp(t,0,1);var n=_.cloneDeep(d.get(this).palette),i={pos:t};o["e"](i,this.optDesc.segment),n.push(i),this.setPaletteFromOutside(n),this.setSelectedHandle(n.length-1),this.emitPaletteInputEvent()},onHandleClick:function(e){if(e.shiftKey){e.preventDefault();var t=this.handleIndexFromElement(e.target);t>=0&&this.removeHandleAtIndex(t)}},onSlideStart:function(e,t,n,i,a){var r=d.get(this);r.slideStartMousePos=null,r.slidingHandleElement=this.handleElements()[t],window.addEventListener("mousemove",this.onSlideMouseMove),window.addEventListener("touchmove",this.onSlideTouchMove)},onSlideMouseMove:function(e){this.onSlideMouseTouchMove({x:e.screenX,y:e.screenY})},onSlideTouchMove:function(e){e.changedTouches.length>0&&this.onSlideMouseTouchMove({x:e.changedTouches[0].screenX,y:e.changedTouches[0].screenY})},onSlideMouseTouchMove:function(e){var t=d.get(this);t.currentMousePos=_.clone(e),t.slideStartMousePos||(t.slideStartMousePos=_.clone(e));var n=Math.abs(e.y-t.slideStartMousePos.y);n>h&&t.palette.length>1?t.slidingHandleElement.classList.add(p):t.slidingHandleElement.classList.remove(p)},onSlideEnd:function(e,t,n,i,a){var r=d.get(this);if(r.slidingHandleElement.classList.remove(p),r.slideStartMousePos){var o=Math.abs(r.currentMousePos.y-r.slideStartMousePos.y);o>h&&this.removeHandleAtIndex(t)}window.removeEventListener("mousemove",this.onSlideMouseMove),window.removeEventListener("touchmove",this.onSlideTouchMove)},onHandleFocus:function(e){var t=this.handleIndexFromElement(e.target);if(t>=0){var n=this.handleElements(),i=n[t];if(i&&i.classList.add(f),null!=this.selectedHandleIndex){var a=n[this.selectedHandleIndex];a&&a.classList.remove(f)}this.selectedHandleIndex=t;var r=d.get(this).palette;this.selectedPaletteItem=_.cloneDeep(r[t])}},onPaletteAttributeInput:function(e){if(null!=this.selectedHandleIndex){var t=_.get(this.selectedPaletteItem,e.path);if(!_.isEqual(t,e.value)){_.set(this.selectedPaletteItem,e.path,_.cloneDeep(e.value));var n=d.get(this).palette;_.set(n[this.selectedHandleIndex],e.path,_.cloneDeep(e.value)),this.updateCanvas(),this.emitPaletteInputEvent()}}},onCanvasResize:function(e){var t=!0,n=!1,i=void 0;try{for(var a,r=e[Symbol.iterator]();!(t=(a=r.next()).done);t=!0){var o=a.value,s=o.contentRect,l=s.width*window.devicePixelRatio,u=s.height*window.devicePixelRatio;o.target.width===l&&o.target.height===u||(o.target.width=l,o.target.height=u,this.updateCanvas({isEaseFunCanvas:o.target.id==this.easeFunCanvasId,isGradientCanvas:o.target.id==this.gradientCanvasId}))}}catch(c){n=!0,i=c}finally{try{t||null==r.return||r.return()}finally{if(n)throw i}}},handleElements:function(){return Array.from(this.getSliderElement().getElementsByClassName("noUi-handle"))},handleIndexFromElement:function(e){var t=this.handleElements();return t.findIndex((function(t){return t.contains(e)}))},setPaletteFromOutside:function(e){var t=d.get(this).palette,n=y(e),i=this.getSliderElement().noUiSlider;if(e.length!=t.length){var a=i.options;a.start=n,this.recreateSlider(a)}else i.set(n);d.get(this).palette=e,this.updateCanvas()},removeHandleAtIndex:function(e){var t=d.get(this).palette;if(t.length>1){var n=_.cloneDeep(t);n.splice(e,1),this.setPaletteFromOutside(n),this.setSelectedHandle((e+1)%n.length),this.emitPaletteInputEvent()}},setSelectedHandle:function(e){var t=this.handleElements();t[e].focus()},emitPaletteInputEvent:function(){var e=d.get(this).palette;this.$emit("input",_.cloneDeep(e))},updateCanvas:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{isEaseFunCanvas:!0,isGradientCanvas:!0},t=d.get(this).palette,n=this.optDesc.$resolvePaletteEaseFunctions(t);e.isEaseFunCanvas&&this.updateEaseFunCanvas(n),e.isGradientCanvas&&this.updateGradientCanvas(n)},updateEaseFunCanvas:function(e){var t=document.getElementById(this.easeFunCanvasId),n=t.width,i=t.height;if(0!==n&&0!==i){var a=t.getContext("2d");a.fillStyle="rgba( 0, 0, 0, 0.3 )",a.strokeStyle="rgb( 255, 255, 255 )",a.lineWidth=window.devicePixelRatio,a.clearRect(0,0,n,i),a.fillRect(0,0,n,i);var r=n+1,o=i-2*a.lineWidth,l=new Uint32Array(new ArrayBuffer(r*Uint32Array.BYTES_PER_ELEMENT));s["e"](l,l.length,e),b(a,0,a.lineWidth,r,o,l,w)}},updateGradientCanvas:function(e){var t=document.getElementById(this.gradientCanvasId),n=t.width,i=t.height;if(0!==n&&0!==i){var a=t.getContext("2d"),r=a.createImageData(n,1),o=new Uint32Array(r.data.buffer);s["e"](o,o.length,e);for(var l=0;l<i;++l)a.putImageData(r,0,l)}}},watch:{value:{deep:!0,handler:function(e,t){var n=v(e,this.optDesc),i=d.get(this).palette,a=g(n),r=g(i);_.isEqual(a,r)||this.setPaletteFromOutside(n)}}}};function v(e,t){var n={pos:0};if(o["e"](n,t.segment),!Array.isArray(e)||0===e.length){var i=_.cloneDeep(n);return i.pos=.5,i.color={r:255,g:255,b:255,a:1},[n,i]}for(var a=_.cloneDeep(e),r=0;r<a.length;++r)a[r]=a[r]||{},_.defaultsDeep(a[r],n);return a}function g(e){var t=_.cloneDeep(e);return t.sort((function(e,t){return e.pos-t.pos})),t}function y(e){return e.map((function(e){return e.pos}))}function b(e,t,n,i,a,r,o){var s=Math.trunc(t);n=Math.trunc(n);var l=function(e){return n+a-o(r[e])*a};e.beginPath();var u=l(0);e.moveTo(s,u);for(var c=1;c<i;++c){var d=c,h=l(c);(h!=u||c>=i-1)&&(d-s>1&&e.lineTo(d-1,u),e.lineTo(d,h),s=d,u=h)}e.stroke()}function w(e){var t=e>>16&255,n=e>>8&255,i=255&e;return(.299*t+.587*n+.114*i)/255}var E=m,x=n("2877"),P=Object(x["a"])(E,i,a,!1,null,null,null);t["default"]=P.exports},"11f2":function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._l(e.optView.options,(function(t){return[e._l(e.resolveOptDesc(t),(function(t){return[e.isAttrTrue(t.node,"depends")?n(t.node.$component,{key:e.childId(t.path),tag:"component",attrs:{disabled:!e.isAttrTrue(t.node,"enabled"),id:e.childId(t.path),optDesc:t.node,value:e.resolveValue(t.path)},on:{input:function(n){return e.onModified(t.path,n)}}}):e._e()]}))]}))],2)},a=[],r=(n("99af"),n("b64b"),n("ca11")),o=n("4752"),s={name:"z42opt-container",inheritAttrs:!1,props:{id:{type:String,required:!0},optData:{type:Object,required:!0},optDesc:{type:r["a"],required:!0},optView:{type:Object,required:!0}},methods:{childId:function(e){return o["c"](this.id,e,"#")},resolveOptDesc:function(e){if(null==e)return[];var t=0===e.length?this.optDesc:_.get(this.optDesc,e);if(t instanceof r["b"])return[{path:e,node:t}];for(var n=[],i=0,a=Object.keys(t);i<a.length;i++){var s=a[i],l=o["c"](e,s);n=n.concat(this.resolveOptDesc(l))}return n},resolveValue:function(e){return _.get(this.optData,e)},isAttrTrue:function(e,t){var n=e.$attrs[t];return"undefined"===typeof n||("function"===typeof n?n(this.optData,this.optDesc):Boolean(n))},onModified:function(e,t){var n=_.get(this.optDesc,e);n instanceof r["b"]&&this.$emit("opt-modified",{path:e,value:t})}}},l=s,u=n("2877"),c=Object(u["a"])(l,i,a,!1,null,null,null);t["default"]=c.exports},2216:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));n("a4d3"),n("e01a"),n("d28b"),n("d81d"),n("d3b7"),n("ac1f"),n("3ca3"),n("1276"),n("ddb0");var i=n("9f12"),a=n("53fe"),r=n("8b83"),o=n("c65a"),s=n("c03e"),l=n("ca11"),u=n("094b"),c=n("4752"),d=n("dcbd"),h=function(e){function t(e){var n;return Object(i["a"])(this,t),n=Object(r["a"])(this,Object(o["a"])(t).call(this,e)),n.position=new u["e"]({min:0,max:1,maxDecimals:3,defaultVal:0}),n.segment=new l["a"]({},{color:new u["b"]({title:"Selected color",defaultVal:{r:0,g:0,b:0,a:1}}),easeFun:new u["d"]({title:"Selected ease function",values:n.$attrs.easeFunctions,defaultVal:n.$attrs.defaultEaseFunction}),isNoisy:new u["a"]({title:"Add noise to lightness (HSL)",defaultVal:!1}),noise:new l["a"]({},{frequency:new u["f"]({shortKey:"f",title:"Frequency",min:1,max:15,maxDecimals:0,defaultVal:2,depends:function(e){return e.isNoisy}}),octaves:new u["f"]({shortKey:"o",title:"Octaves",min:1,max:12,defaultVal:4,depends:function(e){return e.isNoisy}}),gain:new u["e"]({shortKey:"g",title:"Gain",min:.1,max:1,maxDecimals:2,defaultVal:.5,depends:function(e){return e.isNoisy},enabled:function(e){return e.noise.octaves>=2}}),lacunarity:new u["f"]({shortKey:"l",title:"Lacunarity",min:2,max:10,defaultVal:2,depends:function(e){return e.isNoisy},enabled:function(e){return e.noise.octaves>=2}}),amplitude:new u["e"]({shortKey:"a",title:"Amplitude",min:0,max:5,maxDecimals:2,defaultVal:.5,depends:function(e){return e.isNoisy}}),seed:new u["e"]({shortKey:"s",title:"Random seed",min:0,max:1,maxDecimals:2,defaultVal:.5,depends:function(e){return e.isNoisy}})})}),c["f"](n.segment.noise,"palette.noise"),n}return Object(s["a"])(t,e),Object(a["a"])(t,[{key:"$serialize",value:function(e){var t="",n=!0,i=!1,a=void 0;try{for(var r,o=e[Symbol.iterator]();!(n=(r=o.next()).done);n=!0){var s=r.value;if(0===t.length||(t+=" "),t+=this.position.$serialize(s.pos)+"_",t+=this.segment.color.$serialize(s.color)+"_",t+=this.segment.easeFun.$serialize(s.easeFun),s.isNoisy){var l="";for(var u in this.segment.noise){0===l.length||(l+="*");var c=this.segment.noise[u];l+=c.$attrs.shortKey,l+=c.$serialize(s.noise[u])}t+="_"+l}}}catch(d){i=!0,a=d}finally{try{n||null==o.return||o.return()}finally{if(i)throw a}}return t}},{key:"$deserialize",value:function(e){var t=[],n={};c["b"](n,this.segment.noise);var i=!0,a=!1,r=void 0;try{for(var o,s=e.split(" ")[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var l=o.value,u=l.split("_");if(u.length>=2){var d={pos:this.position.$deserialize(u[0]),color:this.segment.color.$deserialize(u[1]),isNoisy:!1};if(u.length>=3&&(d.easeFun=this.segment.easeFun.$deserialize(u[2])),u.length>=4){d.isNoisy=!0,d.noise={};var h=u[3].split("*");for(var p in h){var f=h[p],m=f.substring(0,1),v=f.substring(1),g=n[m];if(g){var y=this.segment.noise[g].$deserialize(v);null!==y&&(d.noise[g]=y)}else console.error("Invalid shortKey for palette noise option:",m)}}t.push(d)}}}catch(b){a=!0,r=b}finally{try{i||null==s.return||s.return()}finally{if(a)throw r}}return t}},{key:"$resolveEaseFunction",value:function(e){return d[e]||d["linear"]}},{key:"$resolvePaletteEaseFunctions",value:function(e){var t=this;return e.map((function(e){var n=_.cloneDeep(e);return n.easeFun=t.$resolveEaseFunction(n.easeFun),n}))}},{key:"$defaultComponent",get:function(){return"z42opt-palette"}}]),t}(l["b"])},2465:function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-form-group",{staticClass:"container px-0"},[n("b-row",{attrs:{"align-v":"center"}},[n("b-col",[n("label",{attrs:{for:e.id,disabled:e.disabled}},[e._v(" "+e._s(e.optDesc.$attrs.title)+": ")])]),n("b-col",[n("b-form-input",{staticClass:"z42opt-color",attrs:{type:"color",id:e.id,value:e.hexValue,disabled:e.disabled},on:{change:function(t){return e.onModified(t)}}})],1)],1)],1)},a=[],r=n("66cb"),o=n("ca11"),s={name:"z42opt-color",inheritAttrs:!1,props:{id:{type:String,required:!0},value:{required:!0},optDesc:{type:o["b"],required:!0},disabled:{type:Boolean,required:!1,default:!1}},created:function(){},computed:{hexValue:function(){return r(this.value).toHexString()}},methods:{onModified:function(e){this.$emit("input",r(e).toRgb())}}},l=s,u=n("2877"),c=Object(u["a"])(l,i,a,!1,null,null,null);t["default"]=c.exports},"357f":function(e,t,n){},4752:function(e,t,n){"use strict";n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return l})),n.d(t,"c",(function(){return d})),n.d(t,"a",(function(){return h})),n.d(t,"f",(function(){return p})),n.d(t,"b",(function(){return m}));n("a4d3"),n("e01a"),n("d28b"),n("99af"),n("0d03"),n("4ec9"),n("4fad"),n("d3b7"),n("ac1f"),n("25f0"),n("3ca3"),n("1276"),n("ddb0"),n("2b3d");var i=n("bf2d"),a=n("e587"),r=n("ca11"),o=n("2ef0");function s(e,t){var n={};l(n,e),console.log("Default options:",JSON.parse(JSON.stringify(n)));var i=u(t,e);return i?(console.log("URL params:",JSON.parse(JSON.stringify(i))),o["defaultsDeep"](i,n),console.log("Merged options:",JSON.parse(JSON.stringify(i))),i):defaultValues}function l(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(!(t instanceof r["a"]))throw new Error("Invalid argument: descriptor must be instance of z42opt.Node");for(var i=0,s=Object.entries(t);i<s.length;i++){var u=Object(a["a"])(s[i],2),c=u[0],h=u[1],p=d(n,c);if(h instanceof r["b"]){var f=h.$attrs.defaultVal;"undefined"===typeof f&&(console.error("Missing attribute defaultVal for option:",p),f=null),o["set"](e,p,f)}else l(e,h,p)}}function u(e,t){if(!(t instanceof r["a"]))throw new Error("Invalid argument: descriptor must be instance of z42opt.Node");var n={};p(t);var i={};m(i,t);var s=new URLSearchParams(e),l=!0,u=!1,c=void 0;try{for(var d,h=s[Symbol.iterator]();!(l=(d=h.next()).done);l=!0){var f=Object(a["a"])(d.value,2),v=f[0],g=f[1],y=i[v];if("undefined"!==typeof y){var b=o["get"](t,y);if(b instanceof r["b"]){var _=b.$deserialize(g);null!==_&&o["set"](n,y,_)}else console.error("Internal error: missing or invalid descriptor for URL param '".concat(v,"', path: ").concat(y))}else console.error("Invalid URL param '".concat(v,"'"))}}catch(w){u=!0,c=w}finally{try{l||null==h.return||h.return()}finally{if(u)throw c}}return n}function c(e,t){if(!(t instanceof r["a"]))throw new Error("Invalid argument: descriptor must be instance of z42opt.Node");p(t);var n=new URLSearchParams;return v(n,e,t),n.toString()}function d(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";return e&&0!=e.length?e+n+t:t}function h(e,t,n){var i=c(e,t),a=n.split("#")[0].split("?")[0];return a+"?"+i+"#"}function p(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=new Map;f(n,e,t);var i=!0,r=!1,o=void 0;try{for(var s,l=n.entries()[Symbol.iterator]();!(i=(s=l.next()).done);i=!0){var u=Object(a["a"])(s.value,2),c=u[0],d=u[1];d.length>1&&console.error("Duplicate value '".concat(c,"' of attribute 'shortKey' detected for the following options:"),d)}}catch(h){r=!0,o=h}finally{try{i||null==l.return||l.return()}finally{if(r)throw o}}}function f(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=0,o=Object.entries(t);i<o.length;i++){var s=Object(a["a"])(o[i],2),l=s[0],u=s[1],c=d(n,l);if(u instanceof r["b"]){var h=u.$attrs.shortKey;if(!h){console.error("Missing attribute 'shortKey' for option:",c);continue}var p=h.toLowerCase();if(p!==h){console.error("Attribute 'shortKey' is not all lowercase for option:",c);continue}e.has(h)?e.get(h).push(c):e.set(h,[c])}else f(e,u,c)}}function m(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=0,o=Object.entries(t);i<o.length;i++){var s=Object(a["a"])(o[i],2),l=s[0],u=s[1],c=d(n,l);u instanceof r["b"]?e[u.$attrs.shortKey]=c:m(e,u,c)}}function v(e,t,n){for(var s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,l=0,u=Object.entries(t);l<u.length;l++){var c=Object(a["a"])(u[l],2),h=c[0],p=c[1],f=d(s,h),m=o["get"](n,f);if(m instanceof r["b"]){if(!1!==m.$attrs.serialize){if(!m.$attrs.shortKey){console.error("Missing attribute shortKey for option:",f);continue}var g=m.$serialize(p);e.append(m.$attrs.shortKey,g)}}else"object"===Object(i["a"])(p)?v(e,p,n,f):console.error("Missing descriptor for option:",f)}}},"4af1":function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-modal",{attrs:{id:e.id,title:e.optView.title,scrollable:"","hide-footer":""},on:{show:e.onShow,hide:e.onHide}},[n("p",[e.optView.moreInfoLinkUrl?n("a",{attrs:{href:e.optView.moreInfoLinkUrl,target:"_blank",rel:"noopener"}},[e._v(" "+e._s(e.optView.moreInfoLinkText)+" ")]):e._e(),n("a",{staticStyle:{float:"right"},attrs:{href:e.permaLinkUrl}},[e._v("Permalink")])]),n(e.optView.component||"z42opt-tabs",{tag:"component",attrs:{id:e.id,optData:e.optData,optDesc:e.optDesc,optView:e.optView,tabIndex:e.tabIndex},on:{"update:tabIndex":function(t){e.tabIndex=t},"update:tab-index":function(t){e.tabIndex=t},"opt-modified":function(t){return e.$emit("opt-modified",t)}}})],1)},a=[],r=n("ca11"),o=n("4752"),s={name:"z42opt-dialog",inheritAttrs:!1,props:{id:{type:String,required:!0},optData:{type:Object,required:!0},optDesc:{type:r["a"],required:!0},optView:{type:Object,required:!0}},data:function(){return{initialPermaLinkUrl:null,tabIndex:0}},computed:{permaLinkUrl:function(){return o["a"](this.optData,this.optDesc,window.location.href)}},methods:{onShow:function(){this.initialPermaLinkUrl=o["a"](this.optData,this.optDesc,window.location.href)},onHide:function(){this.permaLinkUrl!==this.initialPermaLinkUrl&&window.history.pushState({action:"optionsDialogClose"},document.title,this.permaLinkUrl)}}},l=s,u=n("2877"),c=Object(u["a"])(l,i,a,!1,null,null,null);t["default"]=c.exports},"4fc5":function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-form-group",{attrs:{label:e.optDesc.$attrs.title+":","label-for":e.id,disabled:e.disabled}},[n("b-form-select",{staticClass:"z42opt-select",attrs:{id:e.id,options:e.options,value:e.value,disabled:e.disabled},on:{change:function(t){return e.$emit("input",t)}}})],1)},a=[],r=(n("d81d"),n("4fad"),n("d3b7"),n("ddb0"),n("ca11")),o={name:"z42opt-select",inheritAttrs:!1,props:{id:{type:String,required:!0},value:{required:!0},optDesc:{type:r["b"],required:!0},disabled:{type:Boolean,required:!1,default:!1}},created:function(){},computed:{options:function(){var e=Object.entries(this.optDesc.$attrs.values);return e.map((function(e){return{value:e[0],text:e[1].title||e[0]}}))}}},s=o,l=n("2877"),u=Object(l["a"])(s,i,a,!1,null,null,null);t["default"]=u.exports},"56d7":function(e,t,n){"use strict";n.r(t);n("e260"),n("e6cf"),n("cca6"),n("a79d");var i=n("2b0e"),a=n("5f5b");n("ab8b"),n("2dd8");i["default"].use(a["a"]);n("4160"),n("d3b7"),n("ac1f"),n("5319"),n("1276"),n("159b"),n("ddb0");var r=n("b8d7");r.keys().forEach((function(e){var t=r(e),n=e.split("/").pop().replace(/\.\w+$/,"");i["default"].component(n,t.default||t)}));var o=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"app"}},[n("b-button",{directives:[{name:"b-modal",rawName:"v-b-modal.z42opt-dialog",modifiers:{"z42opt-dialog":!0}}],attrs:{id:"button-options-dialog",title:"Plasma Options (Key 'o')"}},[e._v("⚙")]),n("z42opt-dialog",{attrs:{id:"z42opt-dialog",optData:e.optData,optDesc:e.optDesc,optView:e.optView},on:{"opt-modified":function(t){return e.onModified(t)}}}),e.optData.info.showFps?n("div",{attrs:{id:"fps-info"}}):e._e(),n("canvas",{staticClass:"plasma",attrs:{id:"plasmaCanvas"}},[e._v("PlasmaFractal")])],1)},s=[],l=(n("b680"),n("841c"),n("094b")),u=n("2216"),c={linear:{shortKey:"l",title:"Linear"},inQuad:{shortKey:"i2",title:"Quadratic [in]"},outQuad:{shortKey:"o2",title:"Quadratic [out]"},inOutQuad:{shortKey:"io2",title:"Quadratic [in/out]"},inCubic:{shortKey:"i3",title:"Cubic [in]"},outCubic:{shortKey:"o3",title:"Cubic [out]"},inOutCubic:{shortKey:"io3",title:"Cubic [in/out]"},inQuart:{shortKey:"i4",title:"Quartic [in]"},outQuart:{shortKey:"o4",title:"Quartic [out]"},inOutQuart:{shortKey:"io4",title:"Quartic [in/out]"},inQuint:{shortKey:"i5",title:"Quintic [in]"},outQuint:{shortKey:"o5",title:"Quintic [out]"},inOutQuint:{shortKey:"io5",title:"Quintic [in/out]"},inSine:{shortKey:"is",title:"Sine [in]"},outSine:{shortKey:"os",title:"Sine [out]"},inOutSine:{shortKey:"ios",title:"Sine [in/out]"},inOutSine2_3:{shortKey:"ios23",title:"Sine(x) + Sine(x*3)  [in/out]"},inOutSine2_5:{shortKey:"ios25",title:"Sine(x) + Sine(x*5)  [in/out]"},inOutSine2_9:{shortKey:"ios29",title:"Sine(x) + Sine(x*9)  [in/out]"},inOutSine2_13:{shortKey:"ios213",title:"Sine(x) + Sine(x*13) [in/out]"},inExpo:{shortKey:"ie",title:"Exponential [in]"},outExpo:{shortKey:"oe",title:"Exponential [out]"},inOutExpo:{shortKey:"ioe",title:"Exponential [in/out]"},inExpo2:{shortKey:"ie2",title:"Double Exponential [in]"},outExpo2:{shortKey:"oe2",title:"Double Exponential [out]"},inOutExpo2:{shortKey:"ioe2",title:"Double Exponential [in/out]"},inCirc:{shortKey:"ic",title:"Circular [in]"},outCirc:{shortKey:"oc",title:"Circular [out]"},inOutCirc:{shortKey:"ioc",title:"Circular [in/out]"},inBounce:{shortKey:"ib",title:"Bounce [in]"},outBounce:{shortKey:"ob",title:"Bounce [out]"},inOutBounce:{shortKey:"iob",title:"Bounce [in/out]"}},d={Perlin3D:{shortKey:"p3",title:"Perlin"},SimplexPerlin3D:{shortKey:"s3",title:"Simplex"},Value3D:{shortKey:"v3",title:"Value"},Cellular3D:{shortKey:"c3",title:"Cellular"}},h={warpRegular:{shortKey:"r",title:"Regular"},warpPolar:{shortKey:"p",title:"Polar"},warpVortex:{shortKey:"v",title:"Vortex"},warpVortexInverse:{shortKey:"vi",title:"Vortex Inverse"}},p=new l["g"]({},{noise:new l["g"]({},{noiseFunction:new l["d"]({shortKey:"n",title:"Noise function",values:d,defaultVal:"Perlin3D"}),frequency:new l["e"]({shortKey:"f",title:"Frequency",min:.01,max:15,maxDecimals:2,isScale:!0,scaleNormalPos:.33,defaultVal:1.5}),octaves:new l["e"]({shortKey:"o",title:"Octaves",min:1,max:15,maxDecimals:2,defaultVal:10}),gain:new l["e"]({shortKey:"g",title:"Gain",min:.1,max:1,maxDecimals:2,defaultVal:.5,enabled:function(e){return e.noise.octaves>1}}),lacunarity:new l["e"]({shortKey:"l",title:"Lacunarity",min:1,max:10,maxDecimals:2,defaultVal:2,enabled:function(e){return e.noise.octaves>1}}),angle:new l["e"]({shortKey:"an",title:"Angle",min:0,max:90,maxDecimals:1,defaultVal:0,enabled:function(e){return e.noise.octaves>1}}),amplitude:new l["e"]({shortKey:"a",title:"Amplitude",min:.1,max:50,isScale:!0,scaleNormalPos:.15,maxDecimals:2,defaultVal:1}),isClamp:new l["a"]({shortKey:"c",title:"Clamp",defaultVal:!1})}),warp:new l["g"]({},{isEnabled:new l["a"]({shortKey:"de",title:"Warp the noise",defaultVal:!1}),transformFunction:new l["d"]({shortKey:"wt",title:"Transform function",values:h,defaultVal:"warpVortex",depends:function(e){return e.warp.isEnabled}}),noiseFunction:new l["d"]({shortKey:"wn",title:"Noise function",values:d,defaultVal:"Perlin3D",depends:function(e){return e.warp.isEnabled}}),frequency:new l["e"]({shortKey:"wf",title:"Frequency",min:.01,max:15,maxDecimals:2,isScale:!0,scaleNormalPos:.33,defaultVal:1.5,depends:function(e){return e.warp.isEnabled}}),octaves:new l["e"]({shortKey:"wo",title:"Octaves",min:1,max:15,maxDecimals:2,defaultVal:4,depends:function(e){return e.warp.isEnabled}}),gain:new l["e"]({shortKey:"wg",title:"Gain",min:.1,max:1,maxDecimals:2,defaultVal:.75,enabled:function(e){return e.warp.octaves>1},depends:function(e){return e.warp.isEnabled}}),lacunarity:new l["e"]({shortKey:"wl",title:"Lacunarity",min:1,max:10,maxDecimals:2,defaultVal:2,enabled:function(e){return e.warp.octaves>1},depends:function(e){return e.warp.isEnabled}}),amplitude:new l["e"]({shortKey:"wa",title:"Amplitude",min:1,max:100,maxDecimals:1,defaultVal:12,depends:function(e){return e.warp.isEnabled}}),rotation:new l["e"]({shortKey:"wr",title:"Rotation",min:1,max:20,maxDecimals:1,defaultVal:4,depends:function(e){return e.warp.isEnabled&&"warpRegular"!=e.warp.transformFunction}})}),warp2:new l["g"]({},{isEnabled:new l["a"]({shortKey:"de2",title:"Warp the warp",defaultVal:!1}),transformFunction:new l["d"]({shortKey:"wt2",title:"Transform function",values:h,defaultVal:"warpVortex",depends:function(e){return e.warp2.isEnabled}}),noiseFunction:new l["d"]({shortKey:"wn2",title:"Noise function",values:d,defaultVal:"SimplexPerlin3D",depends:function(e){return e.warp2.isEnabled}}),frequency:new l["e"]({shortKey:"wf2",title:"Frequency",min:.01,max:15,maxDecimals:2,isScale:!0,scaleNormalPos:.33,defaultVal:3,depends:function(e){return e.warp2.isEnabled}}),octaves:new l["e"]({shortKey:"wo2",title:"Octaves",min:1,max:15,maxDecimals:2,defaultVal:4,depends:function(e){return e.warp2.isEnabled}}),gain:new l["e"]({shortKey:"wg2",title:"Gain",min:.1,max:1,maxDecimals:2,defaultVal:.55,enabled:function(e){return e.warp2.octaves>1},depends:function(e){return e.warp2.isEnabled}}),lacunarity:new l["e"]({shortKey:"wl2",title:"Lacunarity",min:1,max:10,maxDecimals:2,defaultVal:2,enabled:function(e){return e.warp2.octaves>1},depends:function(e){return e.warp2.isEnabled}}),amplitude:new l["e"]({shortKey:"wa2",title:"Amplitude",min:1,max:100,maxDecimals:1,defaultVal:3,depends:function(e){return e.warp2.isEnabled}}),rotation:new l["e"]({shortKey:"wr2",title:"Rotation",min:1,max:20,maxDecimals:1,defaultVal:2,depends:function(e){return e.warp2.isEnabled&&"warp2Regular"!=e.warp2.transformFunction}})}),palette:new l["g"]({},{isGrayScale:new l["a"]({shortKey:"pg",title:"Show only grayscale output",defaultVal:!1}),isCustom:new l["a"]({shortKey:"icp",title:"Custom palette",defaultVal:!1,depends:function(e){return!e.palette.isGrayScale}}),easeFunctionBgToFg:new l["d"]({shortKey:"pbf",title:"Background to foreground easing",values:c,defaultVal:"inBounce",depends:function(e){return!e.palette.isCustom&&!e.palette.isGrayScale}}),easeFunctionFgToBg:new l["d"]({shortKey:"pfb",title:"Foreground to background easing",values:c,defaultVal:"outBounce",depends:function(e){return!e.palette.isCustom&&!e.palette.isGrayScale}}),saturation:new l["e"]({shortKey:"ps",title:"Saturation",min:0,max:1,maxDecimals:2,defaultVal:.5,depends:function(e){return!e.palette.isCustom&&!e.palette.isGrayScale}}),brightness:new l["e"]({shortKey:"pb",title:"Brightness",min:0,max:1,maxDecimals:2,defaultVal:1,depends:function(e){return!e.palette.isCustom&&!e.palette.isGrayScale}}),bgColor:new l["b"]({shortKey:"pbg",title:"Background color",defaultVal:{r:0,g:0,b:0,a:1},depends:function(e){return!e.palette.isCustom&&!e.palette.isGrayScale}}),customPalette:new u["a"]({shortKey:"cp",easeFunctions:c,defaultEaseFunction:"linear",defaultVal:[],depends:function(e){return e.palette.isCustom&&!e.palette.isGrayScale}}),isCustomPaletteAnimated:new l["a"]({shortKey:"acp",title:"Animate custom palette (random hue offset)",defaultVal:!1,depends:function(e){return e.palette.isCustom&&!e.palette.isGrayScale}})}),noiseAnim:new l["g"]({},{isEnabled:new l["a"]({shortKey:"inm",title:"Mutate noise",defaultVal:!0}),noiseSpeed:new l["e"]({shortKey:"ns",title:"Noise mutation speed",min:0,max:1,maxDecimals:2,isSlow:!0,defaultVal:.05,depends:function(e){return e.noiseAnim.isEnabled}}),turbulence:new l["e"]({shortKey:"ntu",title:"Noise turbulence",min:1,max:2.5,maxDecimals:2,isSlow:!0,defaultVal:1.85,depends:function(e){return e.noiseAnim.isEnabled}})}),warpAnim:new l["g"]({},{isEnabled:new l["a"]({shortKey:"iwm",title:"Mutate warp",defaultVal:!1,depends:function(e){return e.warp.isEnabled}}),noiseSpeed:new l["e"]({shortKey:"ws",title:"Warp mutation speed",min:0,max:1,maxDecimals:2,isSlow:!0,defaultVal:.05,depends:function(e){return e.warp.isEnabled&&e.warpAnim.isEnabled}}),turbulence:new l["e"]({shortKey:"wtu",title:"Warp turbulence",min:1,max:2.5,maxDecimals:2,isSlow:!0,defaultVal:1.85,depends:function(e){return e.warp.isEnabled&&e.warpAnim.isEnabled}})}),warpAnim2:new l["g"]({},{isEnabled:new l["a"]({shortKey:"iwm2",title:"Mutate warp²",defaultVal:!1,depends:function(e){return e.warp2.isEnabled}}),noiseSpeed:new l["e"]({shortKey:"ws2",title:"Warp² mutation speed",min:0,max:1,maxDecimals:2,isSlow:!0,defaultVal:.05,depends:function(e){return e.warp2.isEnabled&&e.warpAnim2.isEnabled}}),turbulence:new l["e"]({shortKey:"wtu2",title:"Warp² turbulence",min:1,max:2.5,maxDecimals:2,isSlow:!0,defaultVal:1.85,depends:function(e){return e.warp2.isEnabled&&e.warpAnim2.isEnabled}})}),paletteAnim:new l["g"]({},{isRotaEnabled:new l["a"]({shortKey:"ipr",title:"Rotate palette (disabled if Noise > Clamp is set)",defaultVal:!1,enabled:function(e){return!e.noise.isClamp}}),rotaSpeed:new l["e"]({shortKey:"prs",title:"Palette rotation speed",min:0,max:1,maxDecimals:2,isSlow:!0,defaultVal:.1,depends:function(e){return e.paletteAnim.isRotaEnabled&&!e.noise.isClamp}}),transitionDelay:new l["c"]({shortKey:"ptde",title:"Palette transition delay",min:0,max:30,displayUnit:"s",maxDecimals:1,isSlow:!0,defaultVal:10,depends:function(e){return!e.palette.isCustom||e.palette.isCustomPaletteAnimated}}),transitionDuration:new l["c"]({shortKey:"ptd",title:"Palette transition duration",min:.1,max:30,displayUnit:"s",maxDecimals:1,isSlow:!0,defaultVal:5,depends:function(e){return!e.palette.isCustom||e.palette.isCustomPaletteAnimated}})}),info:new l["g"]({},{showFps:new l["a"]({shortKey:"sfp",title:"Show FPS",defaultVal:!1,serialize:!1})})}),f={title:"PlasmaFractal Options",moreInfoLinkUrl:"https://github.com/zett42/plasmafractal-gl",moreInfoLinkText:"GitHub Project",groups:{noiseTab:{title:"Noise",options:["noise"]},warpingTab:{title:"Warp",options:["warp"]},warpingTab2:{title:"Warp²",options:["warp2"]},paletteTab:{title:"Palette",options:["palette"]},animTab:{title:"Animation",options:["noiseAnim","warpAnim","warpAnim2","paletteAnim"]},infoTab:{title:"Info",options:["info"]}}},m=n("4752"),v=(n("a4d3"),n("e01a"),n("d28b"),n("4de4"),n("d81d"),n("b65f"),n("e439"),n("dbb4"),n("b64b"),n("3ca3"),n("2fa7")),g=n("9f12"),y=n("53fe"),b=n("2aaf"),_=n.n(b),w=n("66cb"),E=n("2ef0"),x=n("28dd"),P=n.n(x),S=n("e2a2"),O=n.n(S),I=n("be4d"),T=n("dcbd");n("ace4"),n("cfc3"),n("9a8c"),n("a975"),n("735e"),n("c1ac"),n("d139"),n("3a7b"),n("d5d6"),n("82f8"),n("e91f"),n("60bd"),n("5f96"),n("3280"),n("3fcc"),n("ca91"),n("25a1"),n("cd26"),n("3c5d"),n("2954"),n("649e"),n("219c"),n("170b"),n("b39a"),n("72f7");function A(e,t,n,i,a){var r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:e.STATIC_DRAW,o=t,s=t+i,l=n,u=n+a;e.bufferData(e.ARRAY_BUFFER,new Float32Array([o,l,s,l,o,u,o,u,s,l,s,u]),r)}n("c19f"),n("5cc6"),n("fb2c");function N(e,t,n,i){t=Math.trunc(t);var a=new ArrayBuffer(4*t),r=new Uint32Array(a);I["e"](r,r.length,n);for(var o=0;t>=1;++o){var s=new Uint8Array(a);e.texImage2D(e.TEXTURE_2D,o,e.RGBA,t,1,0,e.RGBA,e.UNSIGNED_BYTE,s,0);var l=Math.trunc(t/2);if(l>=1){for(var u=new ArrayBuffer(4*l),c=new Uint32Array(u),d=0,h=0;d<l;++d,h+=2){var p=C(r,h-1,i),f=C(r,h+0,i),m=C(r,h+1,i),v=F(D(z([p,f,m]),1/3));c[d]=v.a<<24|v.r<<16|v.g<<8|v.b}a=u,r=c}t=l}e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,i?e.REPEAT:e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR)}function R(e){return{a:e>>24,r:e>>16&255,g:e>>8&255,b:255&e}}function z(e){var t={a:0,r:0,g:0,b:0},n=!0,i=!1,a=void 0;try{for(var r,o=e[Symbol.iterator]();!(n=(r=o.next()).done);n=!0){var s=r.value;t.a+=s.a,t.r+=s.r,t.g+=s.g,t.b+=s.b}}catch(l){i=!0,a=l}finally{try{n||null==o.return||o.return()}finally{if(i)throw a}}return t}function D(e,t){return{a:e.a*t,r:e.r*t,g:e.g*t,b:e.b*t}}function F(e){return{a:Math.round(e.a),r:Math.round(e.r),g:Math.round(e.g),b:Math.round(e.b)}}function C(e,t,n){var i=n?I["c"](t,e.length):I["b"](t,0,e.length-1);return R(e[i])}var M="#version 300 es\n\n#define SHADER_NAME glPlasmaVertex.glsl\n\nprecision highp float;\n#define GLSLIFY 1\n\n// Scale factor to adjust for screen aspect ratio and orientation.\nuniform vec2 u_scale;\n\n// An attribute is an input (in) to a vertex shader.\n// It will receive data from a buffer\nin vec2 a_position;\nin vec2 a_texCoord;\n\n// Used to pass the texture coordinates to the fragment shader\nout vec2 fragCoord;\n\nvoid main() {\n\t// Scale to adjust for screen aspect ratio and orientation.\n\tvec2 pos = a_position * u_scale;\n\n\t// Define position of the current vertex by assigning to global variable gl_Position \n\tgl_Position = vec4( pos, 0, 1 );\n\n\t// pass the texCoord to the fragment shader\n\t// The GPU will interpolate this value between points.\n\tfragCoord = a_texCoord;\n}",L='#version 300 es\n#define SHADER_NAME glPlasmaFrag.glsl\n\n/*\nPlasmaFractal. Copyright (c) 2019 zett42.\nhttps://github.com/zett42/plasmafractal-gl\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE. \n*/\n\n// Fragment shaders don\'t have a default precision so we need to pick one.\nprecision highp float;\nprecision highp sampler2D;\n#define GLSLIFY 1\n\n//·············································································································\n// Imports\n\n//\n//  Wombat\n//  An efficient texture-free GLSL procedural noise library\n//  Source: https://github.com/BrianSharpe/Wombat\n//  Derived from: https://github.com/BrianSharpe/GPU-Noise-Lib\n//\n//  I\'m not one for copyrights.  Use the code however you wish.\n//  All I ask is that credit be given back to the blog or myself when appropriate.\n//  And also to let me know if you come up with any changes, improvements, thoughts or interesting uses for this stuff. :)\n//  Thanks!\n//\n//  Brian Sharpe\n//  brisharpe CIRCLE_A yahoo DOT com\n//  http://briansharpe.wordpress.com\n//  https://github.com/BrianSharpe\n//\n\n//\n//  Perlin Noise 3D\n//  Return value range of -1.0->1.0\n//\nfloat Perlin3D( vec3 P )\n{\n    //  https://github.com/BrianSharpe/Wombat/blob/master/Perlin3D.glsl\n\n    // establish our grid cell and unit position\n    vec3 Pi = floor(P);\n    vec3 Pf = P - Pi;\n    vec3 Pf_min1 = Pf - 1.0;\n\n    // clamp the domain\n    Pi.xyz = Pi.xyz - floor(Pi.xyz * ( 1.0 / 69.0 )) * 69.0;\n    vec3 Pi_inc1 = step( Pi, vec3( 69.0 - 1.5 ) ) * ( Pi + 1.0 );\n\n    // calculate the hash\n    vec4 Pt = vec4( Pi.xy, Pi_inc1.xy ) + vec2( 50.0, 161.0 ).xyxy;\n    Pt *= Pt;\n    Pt = Pt.xzxz * Pt.yyww;\n    const vec3 SOMELARGEFLOATS = vec3( 635.298681, 682.357502, 668.926525 );\n    const vec3 ZINC = vec3( 48.500388, 65.294118, 63.934599 );\n    vec3 lowz_mod = vec3( 1.0 / ( SOMELARGEFLOATS + Pi.zzz * ZINC ) );\n    vec3 highz_mod = vec3( 1.0 / ( SOMELARGEFLOATS + Pi_inc1.zzz * ZINC ) );\n    vec4 hashx0 = fract( Pt * lowz_mod.xxxx );\n    vec4 hashx1 = fract( Pt * highz_mod.xxxx );\n    vec4 hashy0 = fract( Pt * lowz_mod.yyyy );\n    vec4 hashy1 = fract( Pt * highz_mod.yyyy );\n    vec4 hashz0 = fract( Pt * lowz_mod.zzzz );\n    vec4 hashz1 = fract( Pt * highz_mod.zzzz );\n\n    // calculate the gradients\n    vec4 grad_x0 = hashx0 - 0.49999;\n    vec4 grad_y0 = hashy0 - 0.49999;\n    vec4 grad_z0 = hashz0 - 0.49999;\n    vec4 grad_x1 = hashx1 - 0.49999;\n    vec4 grad_y1 = hashy1 - 0.49999;\n    vec4 grad_z1 = hashz1 - 0.49999;\n    vec4 grad_results_0 = inversesqrt( grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0 ) * ( vec2( Pf.x, Pf_min1.x ).xyxy * grad_x0 + vec2( Pf.y, Pf_min1.y ).xxyy * grad_y0 + Pf.zzzz * grad_z0 );\n    vec4 grad_results_1 = inversesqrt( grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1 ) * ( vec2( Pf.x, Pf_min1.x ).xyxy * grad_x1 + vec2( Pf.y, Pf_min1.y ).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1 );\n\n    // Classic Perlin Interpolation\n    vec3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);\n    vec4 res0 = mix( grad_results_0, grad_results_1, blend.z );\n    vec4 blend2 = vec4( blend.xy, vec2( 1.0 - blend.xy ) );\n    float final = dot( res0, blend2.zxzx * blend2.wwyy );\n    return ( final * 1.1547005383792515290182975610039 );  // scale things to a strict -1.0->1.0 range  *= 1.0/sqrt(0.75)\n}\n\n//\n//  Wombat\n//  An efficient texture-free GLSL procedural noise library\n//  Source: https://github.com/BrianSharpe/Wombat\n//  Derived from: https://github.com/BrianSharpe/GPU-Noise-Lib\n//\n//  I\'m not one for copyrights.  Use the code however you wish.\n//  All I ask is that credit be given back to the blog or myself when appropriate.\n//  And also to let me know if you come up with any changes, improvements, thoughts or interesting uses for this stuff. :)\n//  Thanks!\n//\n//  Brian Sharpe\n//  brisharpe CIRCLE_A yahoo DOT com\n//  http://briansharpe.wordpress.com\n//  https://github.com/BrianSharpe\n//\n\n//\n//  This is a modified version of Stefan Gustavson\'s and Ian McEwan\'s work at http://github.com/ashima/webgl-noise\n//  Modifications are...\n//  - faster random number generation\n//  - analytical final normalization\n//  - space scaled can have an approx feature size of 1.0\n//  - filter kernel changed to fix discontinuities at tetrahedron boundaries\n//\n\n//\n//  Simplex Perlin Noise 3D\n//  Return value range of -1.0->1.0\n//\nfloat SimplexPerlin3D( vec3 P )\n{\n    //  https://github.com/BrianSharpe/Wombat/blob/master/SimplexPerlin3D.glsl\n\n    //  simplex math constants\n    const float SKEWFACTOR = 1.0/3.0;\n    const float UNSKEWFACTOR = 1.0/6.0;\n    const float SIMPLEX_CORNER_POS = 0.5;\n    const float SIMPLEX_TETRAHADRON_HEIGHT = 0.70710678118654752440084436210485;    // sqrt( 0.5 )\n\n    //  establish our grid cell.\n    P *= SIMPLEX_TETRAHADRON_HEIGHT;    // scale space so we can have an approx feature size of 1.0\n    vec3 Pi = floor( P + dot( P, vec3( SKEWFACTOR) ) );\n\n    //  Find the vectors to the corners of our simplex tetrahedron\n    vec3 x0 = P - Pi + dot(Pi, vec3( UNSKEWFACTOR ) );\n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 Pi_1 = min( g.xyz, l.zxy );\n    vec3 Pi_2 = max( g.xyz, l.zxy );\n    vec3 x1 = x0 - Pi_1 + UNSKEWFACTOR;\n    vec3 x2 = x0 - Pi_2 + SKEWFACTOR;\n    vec3 x3 = x0 - SIMPLEX_CORNER_POS;\n\n    //  pack them into a parallel-friendly arrangement\n    vec4 v1234_x = vec4( x0.x, x1.x, x2.x, x3.x );\n    vec4 v1234_y = vec4( x0.y, x1.y, x2.y, x3.y );\n    vec4 v1234_z = vec4( x0.z, x1.z, x2.z, x3.z );\n\n    // clamp the domain of our grid cell\n    Pi.xyz = Pi.xyz - floor(Pi.xyz * ( 1.0 / 69.0 )) * 69.0;\n    vec3 Pi_inc1 = step( Pi, vec3( 69.0 - 1.5 ) ) * ( Pi + 1.0 );\n\n    //\tgenerate the random vectors\n    vec4 Pt = vec4( Pi.xy, Pi_inc1.xy ) + vec2( 50.0, 161.0 ).xyxy;\n    Pt *= Pt;\n    vec4 V1xy_V2xy = mix( Pt.xyxy, Pt.zwzw, vec4( Pi_1.xy, Pi_2.xy ) );\n    Pt = vec4( Pt.x, V1xy_V2xy.xz, Pt.z ) * vec4( Pt.y, V1xy_V2xy.yw, Pt.w );\n    const vec3 SOMELARGEFLOATS = vec3( 635.298681, 682.357502, 668.926525 );\n    const vec3 ZINC = vec3( 48.500388, 65.294118, 63.934599 );\n    vec3 lowz_mods = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + Pi.zzz * ZINC.xyz ) );\n    vec3 highz_mods = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + Pi_inc1.zzz * ZINC.xyz ) );\n    Pi_1 = ( Pi_1.z < 0.5 ) ? lowz_mods : highz_mods;\n    Pi_2 = ( Pi_2.z < 0.5 ) ? lowz_mods : highz_mods;\n    vec4 hash_0 = fract( Pt * vec4( lowz_mods.x, Pi_1.x, Pi_2.x, highz_mods.x ) ) - 0.49999;\n    vec4 hash_1 = fract( Pt * vec4( lowz_mods.y, Pi_1.y, Pi_2.y, highz_mods.y ) ) - 0.49999;\n    vec4 hash_2 = fract( Pt * vec4( lowz_mods.z, Pi_1.z, Pi_2.z, highz_mods.z ) ) - 0.49999;\n\n    //\tevaluate gradients\n    vec4 grad_results = inversesqrt( hash_0 * hash_0 + hash_1 * hash_1 + hash_2 * hash_2 ) * ( hash_0 * v1234_x + hash_1 * v1234_y + hash_2 * v1234_z );\n\n    //\tNormalization factor to scale the final result to a strict 1.0->-1.0 range\n    //\thttp://briansharpe.wordpress.com/2012/01/13/simplex-noise/#comment-36\n    const float FINAL_NORMALIZATION = 37.837227241611314102871574478976;\n\n    //  evaulate the kernel weights ( use (0.5-x*x)^3 instead of (0.6-x*x)^4 to fix discontinuities )\n    vec4 kernel_weights = v1234_x * v1234_x + v1234_y * v1234_y + v1234_z * v1234_z;\n    kernel_weights = max(0.5 - kernel_weights, 0.0);\n    kernel_weights = kernel_weights*kernel_weights*kernel_weights;\n\n    //\tsum with the kernel and return\n    return dot( kernel_weights, grad_results ) * FINAL_NORMALIZATION;\n}\n\n//\n//  Wombat\n//  An efficient texture-free GLSL procedural noise library\n//  Source: https://github.com/BrianSharpe/Wombat\n//  Derived from: https://github.com/BrianSharpe/GPU-Noise-Lib\n//\n//  I\'m not one for copyrights.  Use the code however you wish.\n//  All I ask is that credit be given back to the blog or myself when appropriate.\n//  And also to let me know if you come up with any changes, improvements, thoughts or interesting uses for this stuff. :)\n//  Thanks!\n//\n//  Brian Sharpe\n//  brisharpe CIRCLE_A yahoo DOT com\n//  http://briansharpe.wordpress.com\n//  https://github.com/BrianSharpe\n//\n\n//\n//  Value Noise 3D\n//  Return value range of -1.0->1.0 (modification by zett42, original code: 0.0->1.0)\n//\nfloat Value3D( vec3 P )\n{\n    //  https://github.com/BrianSharpe/Wombat/blob/master/Value3D.glsl\n\n    // establish our grid cell and unit position\n    vec3 Pi = floor(P);\n    vec3 Pf = P - Pi;\n    vec3 Pf_min1 = Pf - 1.0;\n\n    // clamp the domain\n    Pi.xyz = Pi.xyz - floor(Pi.xyz * ( 1.0 / 69.0 )) * 69.0;\n    vec3 Pi_inc1 = step( Pi, vec3( 69.0 - 1.5 ) ) * ( Pi + 1.0 );\n\n    // calculate the hash\n    vec4 Pt = vec4( Pi.xy, Pi_inc1.xy ) + vec2( 50.0, 161.0 ).xyxy;\n    Pt *= Pt;\n    Pt = Pt.xzxz * Pt.yyww;\n    vec2 hash_mod = vec2( 1.0 / ( 635.298681 + vec2( Pi.z, Pi_inc1.z ) * 48.500388 ) );\n    vec4 hash_lowz = fract( Pt * hash_mod.xxxx );\n    vec4 hash_highz = fract( Pt * hash_mod.yyyy );\n\n    //\tblend the results and return\n    vec3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);\n    vec4 res0 = mix( hash_lowz, hash_highz, blend.z );\n    vec4 blend2 = vec4( blend.xy, vec2( 1.0 - blend.xy ) );\n    float result = dot( res0, blend2.zxzx * blend2.wwyy );\n\t\n\treturn result * 2.0 - 1.0;\n}\n\n//\n//  Wombat\n//  An efficient texture-free GLSL procedural noise library\n//  Source: https://github.com/BrianSharpe/Wombat\n//  Derived from: https://github.com/BrianSharpe/GPU-Noise-Lib\n//\n//  I\'m not one for copyrights.  Use the code however you wish.\n//  All I ask is that credit be given back to the blog or myself when appropriate.\n//  And also to let me know if you come up with any changes, improvements, thoughts or interesting uses for this stuff. :)\n//  Thanks!\n//\n//  Brian Sharpe\n//  brisharpe CIRCLE_A yahoo DOT com\n//  http://briansharpe.wordpress.com\n//  https://github.com/BrianSharpe\n//\n\n//\n//  This represents a modified version of Stefan Gustavson\'s work at http://www.itn.liu.se/~stegu/GLSL-cellular\n//  The noise is optimized to use a 2x2x2 search window instead of 3x3x3\n//  Modifications are...\n//  - faster random number generation\n//  - analytical final normalization\n//  - random point offset is restricted to prevent artifacts\n//\n\n//\n//  Cellular Noise 3D\n//  produces a range of 0.0->1.0\n//\nfloat Cellular3D(vec3 P)\n{\n    //\testablish our grid cell and unit position\n    vec3 Pi = floor(P);\n    vec3 Pf = P - Pi;\n\n    // clamp the domain\n    Pi.xyz = Pi.xyz - floor(Pi.xyz * ( 1.0 / 69.0 )) * 69.0;\n    vec3 Pi_inc1 = step( Pi, vec3( 69.0 - 1.5 ) ) * ( Pi + 1.0 );\n\n    // calculate the hash ( over -1.0->1.0 range )\n    vec4 Pt = vec4( Pi.xy, Pi_inc1.xy ) + vec2( 50.0, 161.0 ).xyxy;\n    Pt *= Pt;\n    Pt = Pt.xzxz * Pt.yyww;\n    const vec3 SOMELARGEFLOATS = vec3( 635.298681, 682.357502, 668.926525 );\n    const vec3 ZINC = vec3( 48.500388, 65.294118, 63.934599 );\n    vec3 lowz_mod = vec3( 1.0 / ( SOMELARGEFLOATS + Pi.zzz * ZINC ) );\n    vec3 highz_mod = vec3( 1.0 / ( SOMELARGEFLOATS + Pi_inc1.zzz * ZINC ) );\n    vec4 hash_x0 = fract( Pt * lowz_mod.xxxx ) * 2.0 - 1.0;\n    vec4 hash_x1 = fract( Pt * highz_mod.xxxx ) * 2.0 - 1.0;\n    vec4 hash_y0 = fract( Pt * lowz_mod.yyyy ) * 2.0 - 1.0;\n    vec4 hash_y1 = fract( Pt * highz_mod.yyyy ) * 2.0 - 1.0;\n    vec4 hash_z0 = fract( Pt * lowz_mod.zzzz ) * 2.0 - 1.0;\n    vec4 hash_z1 = fract( Pt * highz_mod.zzzz ) * 2.0 - 1.0;\n\n    //  generate the 8 point positions\n    const float JITTER_WINDOW = 0.166666666;\t// 0.166666666 will guarentee no artifacts.\n    hash_x0 = ( ( hash_x0 * hash_x0 * hash_x0 ) - sign( hash_x0 ) ) * JITTER_WINDOW + vec4( 0.0, 1.0, 0.0, 1.0 );\n    hash_y0 = ( ( hash_y0 * hash_y0 * hash_y0 ) - sign( hash_y0 ) ) * JITTER_WINDOW + vec4( 0.0, 0.0, 1.0, 1.0 );\n    hash_x1 = ( ( hash_x1 * hash_x1 * hash_x1 ) - sign( hash_x1 ) ) * JITTER_WINDOW + vec4( 0.0, 1.0, 0.0, 1.0 );\n    hash_y1 = ( ( hash_y1 * hash_y1 * hash_y1 ) - sign( hash_y1 ) ) * JITTER_WINDOW + vec4( 0.0, 0.0, 1.0, 1.0 );\n    hash_z0 = ( ( hash_z0 * hash_z0 * hash_z0 ) - sign( hash_z0 ) ) * JITTER_WINDOW + vec4( 0.0, 0.0, 0.0, 0.0 );\n    hash_z1 = ( ( hash_z1 * hash_z1 * hash_z1 ) - sign( hash_z1 ) ) * JITTER_WINDOW + vec4( 1.0, 1.0, 1.0, 1.0 );\n\n    //\treturn the closest squared distance\n    vec4 dx1 = Pf.xxxx - hash_x0;\n    vec4 dy1 = Pf.yyyy - hash_y0;\n    vec4 dz1 = Pf.zzzz - hash_z0;\n    vec4 dx2 = Pf.xxxx - hash_x1;\n    vec4 dy2 = Pf.yyyy - hash_y1;\n    vec4 dz2 = Pf.zzzz - hash_z1;\n    vec4 d1 = dx1 * dx1 + dy1 * dy1 + dz1 * dz1;\n    vec4 d2 = dx2 * dx2 + dy2 * dy2 + dz2 * dz2;\n    d1 = min(d1, d2);\n    d1.xy = min(d1.xy, d1.wz);\n    return min(d1.x, d1.y) * ( 9.0 / 12.0 ); // return a value scaled to 0.0->1.0\n}\n\n// Common parameter types\nstruct FbmNoiseParams {\n\tint   octaves;           // number of octaves for fractal noise\n\tfloat octavesFract;      // fractional part of octaves value\n\tfloat frequency;         // noise frequency\n\tfloat gain;              // amplitude factor per octave\n\tfloat angle;             // rotation per octave\n\tfloat lacunarity;        // frequency factor per octave\n\tfloat turbulence;        // Z coordinate factor per octave  \n};\n\nstruct NoiseParams {\n\tFbmNoiseParams basic;    // basic params\n\tfloat anim;              // Z-position in 3D noise, for animation\n\tfloat amplitude;         // noise amplitude\n};\n\nstruct WarpParams {\n\tFbmNoiseParams basic;\n\tfloat anim;              // Z-position in 3D noise, for animation\n\tfloat amplitude;         // directional amplitude\n\tfloat rotation;          // rotational amplitude\n};\n\n// Through preprocessor variables BASE_NOISE_FUN, WARP_NOISE_FUN and WARP2_NOISE_FUN which are passed from JS \n// via injectDefines(), we select from the above noise functions to compose the FBM functions.\n// NOTE: formatting should not be changed, as glslify breaks when more than 1 space character appears after comma!\n\n/*\nPlasmaFractal. Copyright (c) 2019 zett42.\nhttps://github.com/zett42/plasmafractal-gl\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE. \n*/\n\n// Fractal brownian motion noise.\n// Requires NOISE_FUN argument in require() call to define noise function to use.\n\nfloat fbmNoise3D_0( vec3 pos, FbmNoiseParams noise ) {\n\n\tfloat result = 0.0;\n\n\tfloat freq = noise.frequency;\n\tfloat z    = pos.z;\n\tfloat amp  = 1.0;\n\n\t// Z-increment to "randomize" each octave for avoiding artefacts that originate from coords 0,0\n\t// due to the pseudo-random nature of the noise.\n\t// This value has been choosen by trial and error.\n\tconst float zInc = 7.2;\n\n\tmat2 rot = mat2( cos( noise.angle ), sin( noise.angle ), -sin( noise.angle ), cos( noise.angle ) );\n\n\tvec2 p2 = pos.xy * noise.frequency;\n\n\t// Create fractal noise by adding multiple octaves of noise.\n\tfor( int i = 0; i < noise.octaves; ++i ) {                \n\n\t\tresult += BASE_NOISE_FUN( vec3( p2, z ) ) * amp;\n\n\t\tp2  *= rot * noise.lacunarity;\n\t\tamp *= noise.gain;\n\t\tz   += zInc;\n\t\tz   *= noise.turbulence;\n\t}\n\n\t// Fractional part of octave value is used for smooth transition.\n\tresult += BASE_NOISE_FUN( vec3( p2, z ) ) * amp * noise.octavesFract;\n\n\treturn result;\n}\n\n/*\nPlasmaFractal. Copyright (c) 2019 zett42.\nhttps://github.com/zett42/plasmafractal-gl\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE. \n*/\n\n// Fractal brownian motion noise.\n// Requires NOISE_FUN argument in require() call to define noise function to use.\n\nfloat fbmNoise3D_2( vec3 pos, FbmNoiseParams noise ) {\n\n\tfloat result = 0.0;\n\n\tfloat freq = noise.frequency;\n\tfloat z    = pos.z;\n\tfloat amp  = 1.0;\n\n\t// Z-increment to "randomize" each octave for avoiding artefacts that originate from coords 0,0\n\t// due to the pseudo-random nature of the noise.\n\t// This value has been choosen by trial and error.\n\tconst float zInc = 7.2;\n\n\tmat2 rot = mat2( cos( noise.angle ), sin( noise.angle ), -sin( noise.angle ), cos( noise.angle ) );\n\n\tvec2 p2 = pos.xy * noise.frequency;\n\n\t// Create fractal noise by adding multiple octaves of noise.\n\tfor( int i = 0; i < noise.octaves; ++i ) {                \n\n\t\tresult += WARP_NOISE_FUN( vec3( p2, z ) ) * amp;\n\n\t\tp2  *= rot * noise.lacunarity;\n\t\tamp *= noise.gain;\n\t\tz   += zInc;\n\t\tz   *= noise.turbulence;\n\t}\n\n\t// Fractional part of octave value is used for smooth transition.\n\tresult += WARP_NOISE_FUN( vec3( p2, z ) ) * amp * noise.octavesFract;\n\n\treturn result;\n}\n\n/*\nPlasmaFractal. Copyright (c) 2019 zett42.\nhttps://github.com/zett42/plasmafractal-gl\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE. \n*/\n\n// Fractal brownian motion noise.\n// This variant returns two different noise values for a given coordinate.\n// Requires NOISE_FUN argument in require() call to define noise function to use.\n\nvec2 fbmNoiseDual3D_0( vec3 pos, FbmNoiseParams noise ) {\n\n\tvec2 result = vec2( 0 );\n\n\tfloat freq = noise.frequency;\n\tfloat z    = pos.z;\n\tfloat amp  = 1.0;\n\n\t// Z-increment to "randomize" each octave for avoiding artefacts that originate from coords 0,0\n\t// due to the pseudo-random nature of the noise.\n\t// This value has been choosen by trial and error.\n\tconst float zInc = 7.0;\n\n\t// Randomize noise for Y direction.\n\tconst float yInc = 4.8;\n\n\t// Create fractal noise by adding multiple octaves of noise.\n\tfor( int i = 0; i < noise.octaves; ++i ) {                \n\n\t\tvec3 p = vec3( pos.xy * freq, z );\n\t\tfloat nx = WARP_NOISE_FUN( vec3( pos.xy * freq, z ) );\n\t\tfloat ny = WARP_NOISE_FUN( vec3( pos.xy * freq, z + yInc ) );\n\n\t\tresult += vec2( nx, ny ) * amp;\n\n\t\tfreq   *= noise.lacunarity;\n\t\tamp    *= noise.gain;\n\t\tz      += zInc;\n\t\tz      *= noise.turbulence;\n\t}\n\n\t// Fractional part of octave value is used for smooth transition.\n\tvec3 p = vec3( pos.xy * freq, z );\n\tfloat nx = WARP_NOISE_FUN( vec3( pos.xy * freq, z ) );\n\tfloat ny = WARP_NOISE_FUN( vec3( pos.xy * freq, z + yInc ) );\n\n\tresult += vec2( nx, ny ) * amp * noise.octavesFract;\n\n\treturn result;\n}\n\n// Regular domain warping. Just offset coordinates by noise values.\n\nvec2 warpRegular_0( vec2 pos, WarpParams warp ) {\n\n\tvec2 noise = fbmNoiseDual3D_0( vec3( pos, warp.anim ), warp.basic );\n\t\t\t\t\t\t\t\t\t  \n\treturn pos + noise * warp.amplitude;\n}\n\n// Most sample code for domain warping simply adds noise values to the fragment position. \n// This is a variation where we are interpreting the noise values as angle and length to\n// produce more fluid-looking results. \n\nvec2 warpPolar_1( vec2 pos, WarpParams warp ) {\n\n\tvec2 noise = fbmNoiseDual3D_0( vec3( pos, warp.anim ), warp.basic );\n\n\tfloat warpAngle = noise.x * warp.rotation;\n\treturn pos.xy + vec2( sin( warpAngle ), cos( warpAngle ) ) * noise.y * warp.amplitude;\n}\n\n// Most sample code for domain warping simply adds noise values to the fragment position. \n// This is a variation where we are using the noise value for a vortex (spiral) transformation.\n// Creates results similar to warpPolar, but requires only a single noise function, reducing GPU load!\n\nvec2 warpVortex_0( vec2 pos, WarpParams warp ) {\n\t\n\tfloat noise = fbmNoise3D_2( vec3( pos, warp.anim ), warp.basic );\n\n\tfloat angle = noise * warp.rotation;\n\tfloat dist  = noise * warp.amplitude;\n\n\treturn pos + vec2( sin( angle ), cos( angle ) ) * dist;\n}\n\n// Variation of warpVortex. \n\nvec2 warpVortexInverse_0( vec2 pos, WarpParams warp ) {\n\n\tfloat noise = fbmNoise3D_2( vec3( pos, warp.anim ), warp.basic );\n\n\tnoise = 1.0 - abs( clamp( noise, -1.0, 1.0 ) );\n\n\tfloat angle = noise * warp.rotation;\n\tfloat dist  = noise * warp.amplitude;\n\n\treturn pos + vec2( sin( angle ), cos( angle ) ) * dist;\n}\n\n/*\nPlasmaFractal. Copyright (c) 2019 zett42.\nhttps://github.com/zett42/plasmafractal-gl\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE. \n*/\n\n// Fractal brownian motion noise.\n// Requires NOISE_FUN argument in require() call to define noise function to use.\n\nfloat fbmNoise3D_1( vec3 pos, FbmNoiseParams noise ) {\n\n\tfloat result = 0.0;\n\n\tfloat freq = noise.frequency;\n\tfloat z    = pos.z;\n\tfloat amp  = 1.0;\n\n\t// Z-increment to "randomize" each octave for avoiding artefacts that originate from coords 0,0\n\t// due to the pseudo-random nature of the noise.\n\t// This value has been choosen by trial and error.\n\tconst float zInc = 7.2;\n\n\tmat2 rot = mat2( cos( noise.angle ), sin( noise.angle ), -sin( noise.angle ), cos( noise.angle ) );\n\n\tvec2 p2 = pos.xy * noise.frequency;\n\n\t// Create fractal noise by adding multiple octaves of noise.\n\tfor( int i = 0; i < noise.octaves; ++i ) {                \n\n\t\tresult += WARP2_NOISE_FUN( vec3( p2, z ) ) * amp;\n\n\t\tp2  *= rot * noise.lacunarity;\n\t\tamp *= noise.gain;\n\t\tz   += zInc;\n\t\tz   *= noise.turbulence;\n\t}\n\n\t// Fractional part of octave value is used for smooth transition.\n\tresult += WARP2_NOISE_FUN( vec3( p2, z ) ) * amp * noise.octavesFract;\n\n\treturn result;\n}\n\n/*\nPlasmaFractal. Copyright (c) 2019 zett42.\nhttps://github.com/zett42/plasmafractal-gl\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE. \n*/\n\n// Fractal brownian motion noise.\n// This variant returns two different noise values for a given coordinate.\n// Requires NOISE_FUN argument in require() call to define noise function to use.\n\nvec2 fbmNoiseDual3D_1( vec3 pos, FbmNoiseParams noise ) {\n\n\tvec2 result = vec2( 0 );\n\n\tfloat freq = noise.frequency;\n\tfloat z    = pos.z;\n\tfloat amp  = 1.0;\n\n\t// Z-increment to "randomize" each octave for avoiding artefacts that originate from coords 0,0\n\t// due to the pseudo-random nature of the noise.\n\t// This value has been choosen by trial and error.\n\tconst float zInc = 7.0;\n\n\t// Randomize noise for Y direction.\n\tconst float yInc = 4.8;\n\n\t// Create fractal noise by adding multiple octaves of noise.\n\tfor( int i = 0; i < noise.octaves; ++i ) {                \n\n\t\tvec3 p = vec3( pos.xy * freq, z );\n\t\tfloat nx = WARP2_NOISE_FUN( vec3( pos.xy * freq, z ) );\n\t\tfloat ny = WARP2_NOISE_FUN( vec3( pos.xy * freq, z + yInc ) );\n\n\t\tresult += vec2( nx, ny ) * amp;\n\n\t\tfreq   *= noise.lacunarity;\n\t\tamp    *= noise.gain;\n\t\tz      += zInc;\n\t\tz      *= noise.turbulence;\n\t}\n\n\t// Fractional part of octave value is used for smooth transition.\n\tvec3 p = vec3( pos.xy * freq, z );\n\tfloat nx = WARP2_NOISE_FUN( vec3( pos.xy * freq, z ) );\n\tfloat ny = WARP2_NOISE_FUN( vec3( pos.xy * freq, z + yInc ) );\n\n\tresult += vec2( nx, ny ) * amp * noise.octavesFract;\n\n\treturn result;\n}\n\n// Regular domain warping. Just offset coordinates by noise values.\n\nvec2 warpRegular_1( vec2 pos, WarpParams warp ) {\n\n\tvec2 noise = fbmNoiseDual3D_1( vec3( pos, warp.anim ), warp.basic );\n\t\t\t\t\t\t\t\t\t  \n\treturn pos + noise * warp.amplitude;\n}\n\n// Most sample code for domain warping simply adds noise values to the fragment position. \n// This is a variation where we are interpreting the noise values as angle and length to\n// produce more fluid-looking results. \n\nvec2 warpPolar_0( vec2 pos, WarpParams warp ) {\n\n\tvec2 noise = fbmNoiseDual3D_1( vec3( pos, warp.anim ), warp.basic );\n\n\tfloat warpAngle = noise.x * warp.rotation;\n\treturn pos.xy + vec2( sin( warpAngle ), cos( warpAngle ) ) * noise.y * warp.amplitude;\n}\n\n// Most sample code for domain warping simply adds noise values to the fragment position. \n// This is a variation where we are using the noise value for a vortex (spiral) transformation.\n// Creates results similar to warpPolar, but requires only a single noise function, reducing GPU load!\n\nvec2 warpVortex_1( vec2 pos, WarpParams warp ) {\n\t\n\tfloat noise = fbmNoise3D_1( vec3( pos, warp.anim ), warp.basic );\n\n\tfloat angle = noise * warp.rotation;\n\tfloat dist  = noise * warp.amplitude;\n\n\treturn pos + vec2( sin( angle ), cos( angle ) ) * dist;\n}\n\n// Variation of warpVortex. \n\nvec2 warpVortexInverse_1( vec2 pos, WarpParams warp ) {\n\n\tfloat noise = fbmNoise3D_1( vec3( pos, warp.anim ), warp.basic );\n\n\tnoise = 1.0 - abs( clamp( noise, -1.0, 1.0 ) );\n\n\tfloat angle = noise * warp.rotation;\n\tfloat dist  = noise * warp.amplitude;\n\n\treturn pos + vec2( sin( angle ), cos( angle ) ) * dist;\n}\n\n//·············································································································\n// Wrapper functions so we can select from the functions at runtime, without having to know the suffix\n// that is added by glslify to the \'require\'d functions, which it does to avoid duplicate identifiers.\n\nvec2 warpRegular( vec2 pos, WarpParams warp )        { return warpRegular_0( pos, warp ); }\nvec2 warpPolar( vec2 pos, WarpParams warp )          { return warpPolar_1( pos, warp ); }\nvec2 warpVortex( vec2 pos, WarpParams warp )         { return warpVortex_0( pos, warp ); }\nvec2 warpVortexInverse( vec2 pos, WarpParams warp )  { return warpVortexInverse_0( pos, warp ); }\n\nvec2 warpRegular2( vec2 pos, WarpParams warp )       { return warpRegular_1( pos, warp ); }\nvec2 warpPolar2( vec2 pos, WarpParams warp )         { return warpPolar_0( pos, warp ); }\nvec2 warpVortex2( vec2 pos, WarpParams warp )        { return warpVortex_1( pos, warp ); }\nvec2 warpVortexInverse2( vec2 pos, WarpParams warp ) { return warpVortexInverse_1( pos, warp ); }\n\n//·············································································································\n\nfloat clampZeroOne( float value ) {\n\treturn clamp( value, 0.0, 1.0 );\n}\n\n//·············································································································\n\nfloat mapToPaletteMinusOneToOne( float value ) {\n\treturn value / 2.0 + 0.5;\t\n}\n\n//·············································································································\n// Identity functions to switch off certain effects.\n\nfloat identity( float value ) {\treturn value; }\n\nvec2 identity( vec2 value ) { return value; }\n\nvec2 identity( vec2 value, WarpParams warp ) { return value; }\n\n//·············································································································\n// Shader parameters\n\n// Regular noise parameters.\nuniform NoiseParams u_noise;\n\n// Domain warping parameters.\nuniform WarpParams u_warp;\nuniform WarpParams u_warp2;\n\n// Texture that defines the palette.\nuniform sampler2D u_paletteTexture;\nuniform float     u_paletteOffset;     // offset for palette rotation animation\n\n// Fragment coordinates passed in from the vertex shader.\nin vec2 fragCoord;\n\n// Output of this fragment shader.\nout vec4 fragColor;\n\n//·············································································································\n\nvoid main() { \n\n\tvec2 pos = fragCoord.xy;\n\n\tpos = WARP2_TRANSFORM_FUN( pos, u_warp2 );\n\tpos = WARP_TRANSFORM_FUN( pos, u_warp );\n\n\tfloat n = fbmNoise3D_0( vec3( pos, u_noise.anim ), u_noise.basic ) * u_noise.amplitude;\n\t\t\t\t\t\t\n\t// Adjust for differences in noise function range (-1..1 or 0..1).\n\tn = MAP_TO_PALETTE_FUN( n );\n\n\t// Optionally clamp to 0..1\n\tn = NOISE_CLAMP_FUN( n );\n\n\t// Actual color is defined by palette\n\tfragColor = texture( u_paletteTexture, vec2( n + u_paletteOffset, 0 ) );\n}';function V(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function k(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?V(n,!0).forEach((function(t){Object(v["a"])(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):V(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var H=function(){function e(t){Object(g["a"])(this,e),this._noiseSeed=t.noiseSeed,this._warpSeed=t.warpSeed,this._warpSeed2=t.warpSeed2,this._options=E["cloneDeep"](t.options),this._startTime=performance.now()/1e3,this._initPalettes(t.colorSeed),this._initCanvasGl(t.canvas),this.resize(t.width,t.height,!0)}return Object(y["a"])(e,[{key:"_initPalettes",value:function(e){this._paletteRndColorCount=2,this._startPalette=[],this._nextPalette=[],this._currentPalette=[],this._grayScalePalette=[{pos:0,color:{r:0,g:0,b:0,a:1},easeFun:T["linear"]},{pos:1,color:{r:255,g:255,b:255,a:1},easeFun:T["linear"]}],this._paletteCurrentFirstHue=0,this._colorRnd=new _.a(Math.trunc(4294967295*e)),this._startPalette=this._generatePalette(360*this._colorRnd.random()),this._isPaletteTransition=!1,this._paletteStartTime=this._startTime,this._currentPaletteIsRepeat=null}},{key:"_initCanvasGl",value:function(e){this._canvas=e;var t=this._gl=e.getContext("webgl2");t.disable(t.BLEND),t.disable(t.DEPTH_TEST),t.depthMask(t.FALSE),t.stencilMask(t.FALSE),this._positionBuffer=t.createBuffer(),this._texCoordBuffer=t.createBuffer(),this._paletteTexture=t.createTexture(),this._paletteTextureSize=Math.min(t.getParameter(t.MAX_TEXTURE_SIZE),32768),this._rebuildShaders()}},{key:"_rebuildShaders",value:function(){var e="mapToPaletteMinusOneToOne";"Cellular3D"==this._options.noise.noiseFunction&&(e="identity");var t=O()(L,{BASE_NOISE_FUN:this._options.noise.noiseFunction,NOISE_CLAMP_FUN:this._options.noise.isClamp?"clampZeroOne":"identity",MAP_TO_PALETTE_FUN:e,WARP_NOISE_FUN:this._options.warp.noiseFunction,WARP_TRANSFORM_FUN:this._options.warp.isEnabled?this._options.warp.transformFunction:"identity",WARP2_NOISE_FUN:this._options.warp2.noiseFunction,WARP2_TRANSFORM_FUN:this._options.warp2.isEnabled?"".concat(this._options.warp2.transformFunction,"2"):"identity"});console.log("fragShaderSrcTransformed: ",t),this._shader?this._shader.update(M,t):this._shader=P()(this._gl,M,t),this._updateStaticShaderData()}},{key:"_updateStaticShaderData",value:function(){this._shader.bind(),this._updateShaderVar_coords(),this._updateShaderVar_scale()}},{key:"_updateShaderVar_coords",value:function(){var e=this._gl;this._vao&&e.deleteVertexArray(this._vao),this._vao=e.createVertexArray(),e.bindVertexArray(this._vao),e.bindBuffer(e.ARRAY_BUFFER,this._positionBuffer),A(e,-1,-1,2,2),this._shader.attributes.a_position.pointer(e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,this._texCoordBuffer),A(e,-1,-1,2,2),this._shader.attributes.a_texCoord.pointer(e.FLOAT,!1,0,0),e.bindVertexArray(null)}},{key:"_updateShaderVar_scale",value:function(){var e=this._canvas.width,t=this._canvas.height;e>t?t>0&&(this._shader.uniforms.u_scale=[1,e/t]):e>0&&(this._shader.uniforms.u_scale=[t/e,1])}},{key:"resize",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(e!=this._canvas.width||t!=this._canvas.height||n)&&(e<=0||t<=0||(e=Math.trunc(e),t=Math.trunc(t),this._canvas.width=e,this._canvas.height=t,this._gl.viewport(0,0,e,t),this._updateShaderVar_scale()))}},{key:"drawAnimationFrame",value:function(){var e=performance.now()/1e3-this._startTime,t=this._gl;this._shader.bind(),this.setShaderArgs_noise("u_noise",this._options.noise,this._options.noiseAnim,this._noiseSeed,e),this._options.warp.isEnabled&&this.setShaderArgs_warp("u_warp",this._options.warp,this._options.warpAnim,this._warpSeed,e),this._options.warp2.isEnabled&&this.setShaderArgs_warp("u_warp2",this._options.warp2,this._options.warpAnim2,this._warpSeed2,e),this.setShaderArgs_palette(e),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.bindVertexArray(this._vao),t.drawArrays(t.TRIANGLES,0,6)}},{key:"setShaderArgs_noise",value:function(e,t,n,i,a){var r=this._shader.uniforms[e];r.basic.octaves=Math.trunc(this._options.noise.octaves),r.basic.octavesFract=this._options.noise.octaves%1,r.basic.frequency=this._options.noise.frequency/2,r.basic.gain=this._options.noise.gain,r.basic.lacunarity=this._options.noise.lacunarity,r.basic.angle=2*this._options.noise.angle*Math.PI/360,r.amplitude=this._options.noise.amplitude;var o=50*this._noiseSeed,s=1;this._options.noiseAnim.isEnabled&&(o+=a*this._options.noiseAnim.noiseSpeed/3,s=this._options.noiseAnim.turbulence),r.anim=o,r.basic.turbulence=s}},{key:"setShaderArgs_warp",value:function(e,t,n,i,a){var r=this._shader.uniforms[e];r.basic.octaves=Math.trunc(t.octaves),r.basic.octavesFract=t.octaves%1,r.basic.frequency=t.frequency*this._options.noise.frequency,r.basic.gain=t.gain,r.basic.lacunarity=t.lacunarity,r.amplitude=.01*t.amplitude,r.rotation=t.rotation*Math.PI;var o=50*i,s=1;n.isEnabled&&(o+=a*n.noiseSpeed/3,s=n.turbulence),r.anim=o,r.basic.turbulence=s}},{key:"setShaderArgs_palette",value:function(e){var t=this._gl;if(this._options.paletteAnim.isRotaEnabled&&!this._options.noise.isClamp){var n=this._paletteTextureSize/4096;this._shader.uniforms.u_paletteOffset=e*this._options.paletteAnim.rotaSpeed*n}else this._shader.uniforms.u_paletteOffset=0;this._shader.uniforms.u_paletteTexture=0;var i=this._grayScalePalette;this._options.palette.isGrayScale||(i=this._animatePalette()),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this._paletteTexture);var a=!this._options.noise.isClamp;E["isEqual"]([this._currentPalette,this._currentPaletteIsRepeat],[i,a])||(this._currentPalette=E["cloneDeep"](i),this._currentPaletteIsRepeat=a,N(t,this._paletteTextureSize,i,a))}},{key:"_animatePalette",value:function(){var e=performance.now()/1e3,t=e-this._paletteStartTime;if(this._isPaletteTransition){if(t<=this._options.paletteAnim.transitionDuration){var n=t/this._options.paletteAnim.transitionDuration;return I["a"](this._startPalette,this._nextPalette,n)}this._isPaletteTransition=!1,this._paletteStartTime=e;var i=[this._nextPalette,this._startPalette];return this._startPalette=i[0],this._nextPalette=i[1],this._startPalette}return t>this._options.paletteAnim.transitionDelay&&(this._isPaletteTransition=!0,this._paletteStartTime=e,this._nextPalette=this._generatePalette(360*this._colorRnd.random())),this._startPalette}},{key:"_generatePalette",value:function(e){return this._paletteCurrentFirstHue=e,this._options.palette.isCustom?this._generatePaletteCustom(e):this._generatePaletteRandom(e)}},{key:"_generatePaletteCustom",value:function(e){var t=this._options.palette.customPalette.map((function(e){var t=E["cloneDeep"](e);return t.easeFun=T[t.easeFun]||T["linear"],t}));if(this._options.palette.isCustomPaletteAnimated){var n=!0,i=!1,a=void 0;try{for(var r,o=t[Symbol.iterator]();!(n=(r=o.next()).done);n=!0){var s=r.value,l=w(s.color).toHsv();l.h=(l.h+e)%360,s.color=w(l).toRgb()}}catch(u){i=!0,a=u}finally{try{n||null==o.return||o.return()}finally{if(i)throw a}}}return t}},{key:"_generatePaletteRandom",value:function(e){for(var t=[],n={h:e,s:this._options.palette.saturation,v:this._options.palette.brightness,a:1},i=T[this._options.palette.easeFunctionBgToFg],a=T[this._options.palette.easeFunctionFgToBg],r=1/this._paletteRndColorCount,o=r/2,s=0;s<this._paletteRndColorCount;++s){var l=I["d"](n);t.push({pos:s*r,color:k({},this._options.palette.bgColor),easeFun:i||T["linear"]}),t.push({pos:s*r+o,color:l,easeFun:a||T["linear"]})}return t}},{key:"options$noise",get:function(){return E["cloneDeep"](this._options.noise)},set:function(e){var t=!E["isEqual"]([this._options.noise.noiseFunction,this._options.noise.isClamp],[e.noiseFunction,e.isClamp]);this._options.noise=E["cloneDeep"](e),t&&this._rebuildShaders()}},{key:"options$warp",get:function(){return E["cloneDeep"](this._options.warp)},set:function(e){var t=!E["isEqual"]([this._options.warp.isEnabled,this._options.warp.noiseFunction,this._options.warp.transformFunction],[e.isEnabled,e.noiseFunction,e.transformFunction]);this._options.warp=E["cloneDeep"](e),t&&this._rebuildShaders()}},{key:"options$warp2",get:function(){return E["cloneDeep"](this._options.warp2)},set:function(e){var t=!E["isEqual"]([this._options.warp2.isEnabled,this._options.warp2.noiseFunction,this._options.warp2.transformFunction],[e.isEnabled,e.noiseFunction,e.transformFunction]);this._options.warp2=E["cloneDeep"](e),t&&this._rebuildShaders()}},{key:"options$palette",get:function(){return E["cloneDeep"](this._options.palette)},set:function(e){this._options.palette=E["cloneDeep"](e),this._startPalette=this._generatePalette(this._paletteCurrentFirstHue),this._isPaletteTransition=!1,this._paletteStartTime=performance.now()/1e3}},{key:"options$paletteAnim",get:function(){return E["cloneDeep"](this._options.paletteAnim)},set:function(e){e.transitionDelay==this._options.paletteAnim.transitionDelay&&e.transitionDuration==this._options.paletteAnim.transitionDuration||(this._isPaletteTransition=!1,this._paletteStartTime=performance.now()/1e3),this._options.paletteAnim=E["cloneDeep"](e)}},{key:"options$noiseAnim",get:function(){return E["cloneDeep"](this._options.noiseAnim)},set:function(e){this._options.noiseAnim=E["cloneDeep"](e)}},{key:"options$warpAnim",get:function(){return E["cloneDeep"](this._options.warpAnim)},set:function(e){this._options.warpAnim=E["cloneDeep"](e)}},{key:"options$warpAnim2",get:function(){return E["cloneDeep"](this._options.warpAnim2)},set:function(e){this._options.warpAnim2=E["cloneDeep"](e)}}]),e}(),U=m["d"](p,window.location.search),W=null,$=null,K=null,B=performance.now(),j=0,q={name:"app",data:function(){return{optData:U,optDesc:p,optView:f}},mounted:function(){W=document.getElementById("plasmaCanvas"),$=new H({canvas:W,colorSeed:Math.random(),noiseSeed:Math.random(),warpSeed:Math.random(),warpSeed2:Math.random(),options:U,width:Math.round(window.innerWidth*window.devicePixelRatio),height:Math.round(window.innerHeight*window.devicePixelRatio)}),G(),requestAnimationFrame(Y)},methods:{onModified:function(e){E["set"](U,e.path,e.value);var t=e.path.split(".")[0];$["options$"+t]=U[t]}}};function G(){window.addEventListener("resize",E["debounce"](X,150)),window.addEventListener("popstate",(function(){return window.location.reload()})),document.addEventListener("fullscreenchange",J),document.addEventListener("mousemove",J),document.addEventListener("click",J),document.addEventListener("keydown",ee),W.addEventListener("dblclick",Z)}function Y(){$.drawAnimationFrame(),Q(),requestAnimationFrame(Y)}function Q(){++j;var e=performance.now();if(e-B>=1e3){var t=document.getElementById("fps-info");t&&(t.textContent=j.toFixed(0)+" fps"),B=e,j=0}}function X(){var e=Math.round(window.innerWidth*window.devicePixelRatio),t=Math.round(window.innerHeight*window.devicePixelRatio);$.resize(e,t)}function Z(){document.documentElement.requestFullscreen&&(document.fullscreenElement?document.exitFullscreen():document.documentElement.requestFullscreen())}function J(){document.getElementById("button-options-dialog").style.opacity=1,K&&clearTimeout(K),document.fullscreenElement&&(K=setTimeout((function(){return document.getElementById("button-options-dialog").style.opacity=0}),2e3))}function ee(e){if(!e.isComposing)switch(e.keyCode){case"O".charCodeAt(0):document.getElementById("button-options-dialog").click();break}}var te=q,ne=n("2877"),ie=Object(ne["a"])(te,o,s,!1,null,null,null),ae=ie.exports;n("357f");i["default"].config.productionTip=!1,new i["default"]({render:function(e){return e(ae)}}).$mount("#app")},"93b8":function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-form-group",{attrs:{label:e.optDesc.$attrs.title+": "+e.displayValue,"label-for":e.id,disabled:e.disabled}},[n("div",{staticClass:"z42opt-range",attrs:{id:e.id,disabled:e.disabled}})])},a=[],r=(n("a9e3"),n("d3b7"),n("3ca3"),n("10d1"),n("ddb0"),n("ca11")),o=n("e9fa"),s=n.n(o),l=(n("c0a8"),new WeakMap),u={name:"z42opt-range",inheritAttrs:!1,props:{id:{type:String,required:!0},value:{type:Number,required:!0},optDesc:{type:r["b"],required:!0},disabled:{type:Boolean,required:!1,default:!1}},mounted:function(){var e=this;l.set(this,{sliderValue:this.value});var t=this.getSliderElement();s.a.create(t,this.createSliderConfig());var n=this.optDesc.$attrs.isSlow?"change":"slide";t.noUiSlider.on(n,(function(){return e.onSlide.apply(e,arguments)}))},computed:{displayValue:function(){return this.optDesc.$displayValue(this.value)}},methods:{getSliderElement:function(){return document.getElementById(this.id)},createSliderConfig:function(){var e=this,t=1;null!=this.optDesc.$attrs.step?t=this.optDesc.$attrs.step:null!=this.optDesc.$attrs.maxDecimals&&(t=1/Math.pow(10,this.optDesc.$attrs.maxDecimals));var n={min:this.optDesc.$attrs.min,max:this.optDesc.$attrs.max};if(this.optDesc.$attrs.isScale){var i=50;null!=this.optDesc.$attrs.scaleNormalPos&&(i=100*this.optDesc.$attrs.scaleNormalPos),n["".concat(i,"%")]=1}var a={to:function(t){return e.optDesc.$displayValue(t)}};return{start:[this.value],step:t,range:n,behaviour:"unconstrained",tooltips:!!this.optDesc.$attrs.isSlow&&a}},onSlide:function(e,t,n,i,a){var r=l.get(this),o=n[0];r.sliderValue!==o&&(r.sliderValue=o,this.$emit("input",o))}},watch:{value:function(e,t){var n=l.get(this);if(n.sliderValue!==e){n.sliderValue=e;var i=this.getSliderElement();i.noUiSlider.set([e])}}}},c=u,d=n("2877"),h=Object(d["a"])(c,i,a,!1,null,null,null);t["default"]=h.exports},b8d7:function(e,t,n){var i={"./z42opt-check.vue":"0388","./z42opt-color.vue":"2465","./z42opt-container.vue":"11f2","./z42opt-dialog.vue":"4af1","./z42opt-palette.vue":"0954","./z42opt-range.vue":"93b8","./z42opt-select.vue":"4fc5","./z42opt-tabs.vue":"fc79"};function a(e){var t=r(e);return n(t)}function r(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}a.keys=function(){return Object.keys(i)},a.resolve=r,e.exports=a,a.id="b8d7"},be4d:function(e,t,n){"use strict";n("4e82");var i=n("284c"),a=n("66cb"),r=(n("b65f"),n("9f12")),o=n("53fe"),s=function(){function e(t,n,i){Object(r["a"])(this,e),this.x=t,this.y=n,this.z=i}return Object(o["a"])(e,[{key:"dot2",value:function(e,t){return this.x*e+this.y*t}},{key:"dot3",value:function(e,t,n){return this.x*e+this.y*t+this.z*n}}]),e}();function l(e){return e*e*e*(e*(6*e-15)+10)}function u(e,t,n){return(1-n)*e+n*t}var c=[new s(1,1,0),new s(-1,1,0),new s(1,-1,0),new s(-1,-1,0),new s(1,0,1),new s(-1,0,1),new s(1,0,-1),new s(-1,0,-1),new s(0,1,1),new s(0,-1,1),new s(0,1,-1),new s(0,-1,-1)],d=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],h=.5*(Math.sqrt(3)-1),p=(3-Math.sqrt(3))/6,f=1/3,m=1/6,v=function(){function e(t){Object(r["a"])(this,e),this._perm=new Array(512),this._gradP=new Array(512),this.seed=t}return Object(o["a"])(e,[{key:"simplex2",value:function(e,t){var n,i,a,r,o,s=(e+t)*h,l=Math.floor(e+s),u=Math.floor(t+s),c=(l+u)*p,d=e-l+c,f=t-u+c;d>f?(r=1,o=0):(r=0,o=1);var m=d-r+p,v=f-o+p,g=d-1+2*p,y=f-1+2*p;l&=255,u&=255;var b=this._gradP[l+this._perm[u]],_=this._gradP[l+r+this._perm[u+o]],w=this._gradP[l+1+this._perm[u+1]],E=.5-d*d-f*f;E<0?n=0:(E*=E,n=E*E*b.dot2(d,f));var x=.5-m*m-v*v;x<0?i=0:(x*=x,i=x*x*_.dot2(m,v));var P=.5-g*g-y*y;return P<0?a=0:(P*=P,a=P*P*w.dot2(g,y)),70*(n+i+a)}},{key:"simplex3",value:function(e,t,n){var i,a,r,o,s,l,u,c,d,h,p=(e+t+n)*f,v=Math.floor(e+p),g=Math.floor(t+p),y=Math.floor(n+p),b=(v+g+y)*m,_=e-v+b,w=t-g+b,E=n-y+b;_>=w?w>=E?(s=1,l=0,u=0,c=1,d=1,h=0):_>=E?(s=1,l=0,u=0,c=1,d=0,h=1):(s=0,l=0,u=1,c=1,d=0,h=1):w<E?(s=0,l=0,u=1,c=0,d=1,h=1):_<E?(s=0,l=1,u=0,c=0,d=1,h=1):(s=0,l=1,u=0,c=1,d=1,h=0);var x=_-s+m,P=w-l+m,S=E-u+m,O=_-c+2*m,I=w-d+2*m,T=E-h+2*m,A=_-1+3*m,N=w-1+3*m,R=E-1+3*m;v&=255,g&=255,y&=255;var z=this._gradP[v+this._perm[g+this._perm[y]]],D=this._gradP[v+s+this._perm[g+l+this._perm[y+u]]],F=this._gradP[v+c+this._perm[g+d+this._perm[y+h]]],C=this._gradP[v+1+this._perm[g+1+this._perm[y+1]]],M=.6-_*_-w*w-E*E;M<0?i=0:(M*=M,i=M*M*z.dot3(_,w,E));var L=.6-x*x-P*P-S*S;L<0?a=0:(L*=L,a=L*L*D.dot3(x,P,S));var V=.6-O*O-I*I-T*T;V<0?r=0:(V*=V,r=V*V*F.dot3(O,I,T));var k=.6-A*A-N*N-R*R;return k<0?o=0:(k*=k,o=k*k*C.dot3(A,N,R)),32*(i+a+r+o)}},{key:"perlin2",value:function(e,t){var n=Math.floor(e),i=Math.floor(t);e-=n,t-=i,n&=255,i&=255;var a=this._gradP[n+this._perm[i]].dot2(e,t),r=this._gradP[n+this._perm[i+1]].dot2(e,t-1),o=this._gradP[n+1+this._perm[i]].dot2(e-1,t),s=this._gradP[n+1+this._perm[i+1]].dot2(e-1,t-1),c=l(e);return u(u(a,o,c),u(r,s,c),l(t))}},{key:"perlin3",value:function(e,t,n){var i=Math.floor(e),a=Math.floor(t),r=Math.floor(n);e-=i,t-=a,n-=r,i&=255,a&=255,r&=255;var o=this._gradP[i+this._perm[a+this._perm[r]]].dot3(e,t,n),s=this._gradP[i+this._perm[a+this._perm[r+1]]].dot3(e,t,n-1),c=this._gradP[i+this._perm[a+1+this._perm[r]]].dot3(e,t-1,n),d=this._gradP[i+this._perm[a+1+this._perm[r+1]]].dot3(e,t-1,n-1),h=this._gradP[i+1+this._perm[a+this._perm[r]]].dot3(e-1,t,n),p=this._gradP[i+1+this._perm[a+this._perm[r+1]]].dot3(e-1,t,n-1),f=this._gradP[i+1+this._perm[a+1+this._perm[r]]].dot3(e-1,t-1,n),m=this._gradP[i+1+this._perm[a+1+this._perm[r+1]]].dot3(e-1,t-1,n-1),v=l(e),g=l(t),y=l(n);return u(u(u(o,h,v),u(s,p,v),y),u(u(c,f,v),u(d,m,v),y),g)}},{key:"seed",set:function(e){if(e!==this._seed){this._seed=e,e>0&&e<1&&(e*=65536),e=Math.floor(e),e<256&&(e|=e<<8);for(var t=0;t<256;t++){var n=void 0;n=1&t?d[t]^255&e:d[t]^e>>8&255,this._perm[t]=this._perm[t+256]=n,this._gradP[t]=this._gradP[t+256]=c[n%12]}}},get:function(){return this._seed}}]),e}(),g=n("2aaf"),y=n.n(g),b=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Math.random();Object(r["a"])(this,e),this._noiseGenes=[],this._seed=Math.trunc(4294967295*n),this.octaves=t}return Object(o["a"])(e,[{key:"noise",value:function(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=0,s=n,l=r,u=0;u<this._noiseGenes.length;u++){var c=this._noiseGenes[u].perlin2(e*s,t*s);o+=c*l,l*=i,s*=a}return o}},{key:"octaves",set:function(e){if(e=Math.trunc(e),this._noiseGenes.length!==e){this._noiseGenes.length=e;for(var t=new y.a(this._seed),n=0;n<e;++n){var i=t.random(),a=this._noiseGenes[n];a?a.seed=i:a=this._noiseGenes[n]=new v(i)}}},get:function(){return this._noiseGenes.length}}]),e}();function w(e,t,n,i,a,r,o){if(!(n<=0)){n>e.length&&(n=e.length);for(var s=0;s<n;++s){var l=I(s+t,e.length),u={r:r(s,i.r,a.r-i.r,n),g:r(s,i.g,a.g-i.g,n),b:r(s,i.b,a.b-i.b,n),a:r(s,i.a,a.a-i.a,n)},c=o(s/n,u),d=Math.round(c.r),h=Math.round(c.g),p=Math.round(c.b),f=Math.round(255*c.a);e[l]=d|h<<8|p<<16|f<<24}return t+n}}function E(e,t,n){var a=Object(i["a"])(n);a.sort((function(e,t){return e.pos-t.pos}));for(var r=0;r<a.length;++r){var o=(r+1)%a.length,s=a[r],l=a[o],u=s.pos*t,c=l.pos*t,d=Math.round(u),h=Math.round(c),p=h-d;if(o<=r&&(p=t-d+h),p<=0)e[d]=s.color;else{var f=function(e,t){return t};s.isNoisy&&s.noise&&(f=x(s.noise)),w(e,d,p,s.color,l.color,s.easeFun,f)}}}function x(e){var t=new b(e.octaves,e.seed);return function(n,i){var a=0,r=t.noise(n,a,e.frequency,e.gain,e.lacunarity,e.amplitude);return D(i,r)}}function P(e,t,n){if(e.length!=t.length)return console.assert(!1,"Palette arguments must have same size"),null;for(var i=_.cloneDeep(t),a=0;a<e.length;++a)i[a].color=S(e[a].color,t[a].color,n);return i}function S(e,t,n){return{r:Math.round(e.r+(t.r-e.r)*n),g:Math.round(e.g+(t.g-e.g)*n),b:Math.round(e.b+(t.b-e.b)*n),a:Math.round(e.a+(t.a-e.a)*n)}}function O(e){var t=a(e).toRgb(),n=222.4922359499622;return e.h=(e.h+n)%360,t}function I(e,t){return e-t*Math.floor(e/t)}function T(e,t,n){return e<t?t:e>n?n:e}function A(e,t,n){return e+(t-e)*n}function N(e,t,n,i,a){return A(A(e,t,n),i,a)}function R(e){return(Math.max(e.r,e.g,e.b)+Math.min(e.r,e.g,e.b))/255/2}function z(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:R(e);if(n=2*n-1,n<0){if(-1===n)return t*=255,{r:t,g:t,b:t,a:e.a};t=2*t-1;var i=-n,a=-Math.min(t,0),r=(a-i)/(1-i),o=Math.max(t,0);return{r:N(e.r,0,r,255,o),g:N(e.g,0,r,255,o),b:N(e.b,0,r,255,o),a:e.a}}if(1===n)return t*=255,{r:t,g:t,b:t,a:e.a};t=2*t-1;var s=n,l=Math.max(t,0),u=(l-s)/(1-s),c=-Math.min(t,0);return{r:N(e.r,255,u,0,c),g:N(e.g,255,u,0,c),b:N(e.b,255,u,0,c),a:e.a}}function D(e,t){var n=R(e),i=T(n+t,0,1);return z(e,i,n)}n.d(t,"e",(function(){return E})),n.d(t,"a",(function(){return P})),n.d(t,"d",(function(){return O})),n.d(t,"c",(function(){return I})),n.d(t,"b",(function(){return T}))},ca11:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return u}));n("0d03"),n("d3b7"),n("25f0");var i=n("53fe"),a=n("8b83"),r=n("c65a"),o=n("c03e"),s=n("9f12"),l=function e(t,n){Object(s["a"])(this,e),Object.defineProperty(this,"$attrs",{enumerable:!1,configurable:!1,writable:!0,value:t}),Object.assign(this,n)},u=function(e){function t(e){return Object(s["a"])(this,t),Object(a["a"])(this,Object(r["a"])(t).call(this,e))}return Object(o["a"])(t,e),Object(i["a"])(t,[{key:"$serialize",value:function(e){return e.toString()}},{key:"$deserialize",value:function(e){return e}},{key:"$displayValue",value:function(e){return e.toString()}},{key:"$parseError",value:function(e){console.error("Invalid option value:",e,", descriptor:",this)}},{key:"$defaultComponent",get:function(){return null}},{key:"$component",get:function(){return this.$attrs.component||this.$defaultComponent}}]),t}(l)},dcbd:function(e,t,n){"use strict";n.r(t),n.d(t,"linear",(function(){return i})),n.d(t,"inQuad",(function(){return a})),n.d(t,"outQuad",(function(){return r})),n.d(t,"inOutQuad",(function(){return o})),n.d(t,"inCubic",(function(){return s})),n.d(t,"outCubic",(function(){return l})),n.d(t,"inOutCubic",(function(){return u})),n.d(t,"inQuart",(function(){return c})),n.d(t,"outQuart",(function(){return d})),n.d(t,"inOutQuart",(function(){return h})),n.d(t,"inQuint",(function(){return p})),n.d(t,"outQuint",(function(){return f})),n.d(t,"inOutQuint",(function(){return m})),n.d(t,"inSine",(function(){return v})),n.d(t,"outSine",(function(){return g})),n.d(t,"inOutSine",(function(){return y})),n.d(t,"inOutSine2_3",(function(){return b})),n.d(t,"inOutSine2_5",(function(){return _})),n.d(t,"inOutSine2_9",(function(){return w})),n.d(t,"inOutSine2_13",(function(){return E})),n.d(t,"inExpo",(function(){return x})),n.d(t,"outExpo",(function(){return P})),n.d(t,"inOutExpo",(function(){return S})),n.d(t,"inExpo2",(function(){return O})),n.d(t,"outExpo2",(function(){return I})),n.d(t,"inOutExpo2",(function(){return T})),n.d(t,"inCirc",(function(){return A})),n.d(t,"outCirc",(function(){return N})),n.d(t,"inOutCirc",(function(){return R})),n.d(t,"inElastic",(function(){return z})),n.d(t,"outElastic",(function(){return D})),n.d(t,"inOutElastic",(function(){return F})),n.d(t,"inBack",(function(){return C})),n.d(t,"outBack",(function(){return M})),n.d(t,"inOutBack",(function(){return L})),n.d(t,"inBounce",(function(){return V})),n.d(t,"outBounce",(function(){return k})),n.d(t,"inOutBounce",(function(){return H}));var i=function(e,t,n,i){return n*e/i+t},a=function(e,t,n,i){return n*(e/=i)*e+t},r=function(e,t,n,i){return-n*(e/=i)*(e-2)+t},o=function(e,t,n,i){return(e/=i/2)<1?n/2*e*e+t:-n/2*(--e*(e-2)-1)+t},s=function(e,t,n,i){return n*(e/=i)*e*e+t},l=function(e,t,n,i){return n*((e=e/i-1)*e*e+1)+t},u=function(e,t,n,i){return(e/=i/2)<1?n/2*e*e*e+t:n/2*((e-=2)*e*e+2)+t},c=function(e,t,n,i){return n*(e/=i)*e*e*e+t},d=function(e,t,n,i){return-n*((e=e/i-1)*e*e*e-1)+t},h=function(e,t,n,i){return(e/=i/2)<1?n/2*e*e*e*e+t:-n/2*((e-=2)*e*e*e-2)+t},p=function(e,t,n,i){return n*(e/=i)*e*e*e*e+t},f=function(e,t,n,i){return n*((e=e/i-1)*e*e*e*e+1)+t},m=function(e,t,n,i){return(e/=i/2)<1?n/2*e*e*e*e*e+t:n/2*((e-=2)*e*e*e*e+2)+t},v=function(e,t,n,i){return-n*Math.cos(e/i*(Math.PI/2))+n+t},g=function(e,t,n,i){return n*Math.sin(e/i*(Math.PI/2))+t},y=function(e,t,n,i){return-n/2*(Math.cos(Math.PI*e/i)-1)+t},b=function(e,t,n,i){return-n/2*(.6*Math.cos(Math.PI*e/i)+.4*Math.cos(Math.PI*e/i*3)-1)+t},_=function(e,t,n,i){return-n/2*(.875*Math.cos(Math.PI*e/i)+.125*Math.cos(Math.PI*e/i*5)-1)+t},w=function(e,t,n,i){return-n/2*(.875*Math.cos(Math.PI*e/i)+.125*Math.cos(Math.PI*e/i*9)-1)+t},E=function(e,t,n,i){return-n/2*(.9*Math.cos(Math.PI*e/i)+.1*Math.cos(Math.PI*e/i*13)-1)+t},x=function(e,t,n,i){return 0==e?t:n*Math.pow(2,10*(e/i-1))+t},P=function(e,t,n,i){return e==i?t+n:n*(1-Math.pow(2,-10*e/i))+t},S=function(e,t,n,i){return 0==e?t:e==i?t+n:(e/=i/2)<1?n/2*Math.pow(2,10*(e-1))+t:n/2*(2-Math.pow(2,-10*--e))+t},O=function(e,t,n,i){return 0==e?t:n*Math.pow(2,20*(e/i-1))+t},I=function(e,t,n,i){return e==i?t+n:n*(1-Math.pow(2,-20*e/i))+t},T=function(e,t,n,i){return 0==e?t:e==i?t+n:(e/=i/2)<1?n/2*Math.pow(2,20*(e-1))+t:n/2*(2-Math.pow(2,-20*--e))+t},A=function(e,t,n,i){return-n*(Math.sqrt(1-(e/=i)*e)-1)+t},N=function(e,t,n,i){return n*Math.sqrt(1-(e=e/i-1)*e)+t},R=function(e,t,n,i){return(e/=i/2)<1?-n/2*(Math.sqrt(1-e*e)-1)+t:n/2*(Math.sqrt(1-(e-=2)*e)+1)+t},z=function(e,t,n,i){var a=1.70158,r=0,o=n;return 0==e?t:1==(e/=i)?t+n:(r||(r=.3*i),o<Math.abs(n)?(o=n,a=r/4):a=r/(2*Math.PI)*Math.asin(n/o),-o*Math.pow(2,10*(e-=1))*Math.sin((e*i-a)*(2*Math.PI)/r)+t)},D=function(e,t,n,i){var a=1.70158,r=0,o=n;return 0==e?t:1==(e/=i)?t+n:(r||(r=.3*i),o<Math.abs(n)?(o=n,a=r/4):a=r/(2*Math.PI)*Math.asin(n/o),o*Math.pow(2,-10*e)*Math.sin((e*i-a)*(2*Math.PI)/r)+n+t)},F=function(e,t,n,i){var a=1.70158,r=0,o=n;return 0==e?t:2==(e/=i/2)?t+n:(r||(r=i*(.3*1.5)),o<Math.abs(n)?(o=n,a=r/4):a=r/(2*Math.PI)*Math.asin(n/o),e<1?o*Math.pow(2,10*(e-=1))*Math.sin((e*i-a)*(2*Math.PI)/r)*-.5+t:o*Math.pow(2,-10*(e-=1))*Math.sin((e*i-a)*(2*Math.PI)/r)*.5+n+t)},C=function(e,t,n,i,a){return void 0==a&&(a=1.70158),n*(e/=i)*e*((a+1)*e-a)+t},M=function(e,t,n,i,a){return void 0==a&&(a=1.70158),n*((e=e/i-1)*e*((a+1)*e+a)+1)+t},L=function(e,t,n,i,a){return void 0==a&&(a=1.70158),(e/=i/2)<1?n/2*(e*e*((1+(a*=1.525))*e-a))+t:n/2*((e-=2)*e*((1+(a*=1.525))*e+a)+2)+t},V=function(e,t,n,i){return n-k(i-e,0,n,i)+t},k=function(e,t,n,i){return(e/=i)<1/2.75?n*(7.5625*e*e)+t:e<2/2.75?n*(7.5625*(e-=1.5/2.75)*e+.75)+t:e<2.5/2.75?n*(7.5625*(e-=2.25/2.75)*e+.9375)+t:n*(7.5625*(e-=2.625/2.75)*e+.984375)+t},H=function(e,t,n,i){return e<i/2?.5*V(2*e,0,n,i)+t:.5*k(2*e-i,0,n,i)+.5*n+t}},fc79:function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("b-tabs",{attrs:{value:e.tabIndex},on:{input:function(t){return e.$emit("update:tabIndex",t)}}},e._l(e.optView.groups,(function(t,i){return n("b-tab",{key:e.childId(i),attrs:{id:e.childId(i),title:t.title}},[n(e.contentComponentName(t),{tag:"component",staticClass:"container px-0",attrs:{id:e.childId(i),optData:e.optData,optDesc:e.optDesc,optView:t},on:{"opt-modified":function(t){return e.$emit("opt-modified",t)}}})],1)})),1)},a=[],r=(n("a9e3"),n("ca11")),o=n("4752"),s={name:"z42opt-tabs",inheritAttrs:!1,props:{id:{type:String,required:!0},optData:{type:Object,required:!0},optDesc:{type:r["a"],required:!0},optView:{type:Object,required:!0},tabIndex:{type:Number,required:!1,default:0}},methods:{childId:function(e){return o["c"](this.id,e,"#")},contentComponentName:function(e){return e.component?e.component:e.groups?"z42opt-tabs":"z42opt-container"}}},l=s,u=n("2877"),c=Object(u["a"])(l,i,a,!1,null,null,null);t["default"]=c.exports}});
//# sourceMappingURL=app-legacy.287618d5.js.map